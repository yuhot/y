# -*- coding: utf-8 -*-
from linepy import *
from akad.ttypes import *
from multiprocessing import Pool, Process
from datetime import datetime
from time import sleep
from bs4 import BeautifulSoup
from humanfriendly import format_timespan, format_size, format_number, format_length
import time, random, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six, ast, pytz, urllib.request, urllib.parse, urllib.error, urllib.parse,antolib,subprocess,unicodedata,GACSender
from gtts import gTTS
from googletrans import Translator
#==============================================================================#
botStart = time.time()
#==============================================================================#
#line = LINE()
#line = LINE("‡πÄ‡∏°‡∏•","‡∏û‡∏≤‡∏™")
line = LINE()
line.log("Auth Token : " + str(line.authToken))
line.log("Timeline Token : " + str(line.tl.channelAccessToken))

ki = LINE('')
ki.log("Auth Token : " + str(ki.authToken))
ki.log("Timeline Token : " + str(ki.tl.channelAccessToken))

#kk = LINE('')
#kk.log("Auth Token : " + str(kk.authToken))
#kk.log("Timeline Token : " + str(kk.tl.channelAccessToken))

#kc = LINE('')
#kc.log("Auth Token : " + str(kc.authToken))
#kc.log("Timeline Token : " + str(kc.tl.channelAccessToken))



print ("Login Succes")

lineMID = line.profile.mid
lineProfile = line.getProfile()
lineSettings = line.getSettings()

kiMID = ki.profile.mid
kiProfile = ki.getProfile()
kiSettings = ki.getSettings()

#kkMID = kk.profile.mid
#kkProfile = kk.getProfile()
#kkSettings = kk.getSettings()

#kcMID = kc.profile.mid
#kcProfile = kc.getProfile()
#kcSettings = kc.getSettings()



#oepoll = OEPoll(kc)
#oepoll = OEPoll(kk)
oepoll = OEPoll(ki)
oepoll = OEPoll(line)
readOpen = codecs.open("read.json","r","utf-8")
settingsOpen = codecs.open("temp.json","r","utf-8")
read = json.load(readOpen)
settings = json.load(settingsOpen)
Rfu = [line,ki]
Rfc = [ki]
Exc = [ki]
lineMID = line.getProfile().mid
kiMID = ki.getProfile().mid
#kkMID = kk.getProfile().mid
#kcMID = kc.getProfile().mid
bot1 = line.getProfile().mid
RfuBot=[lineMID,kiMID]
RfuBot=[lineMID]
Family=["u06779df38010e6e1509ca0499acaa501",lineMID]
admin=['u06779df38010e6e1509ca0499acaa501',lineMID]
RfuFamily = RfuBot + Family

protectname = []
protecturl = []
protection = []
autocancel = {}
autoinvite = []
autoleaveroom = []
targets = []
#==============================================================================#
settings = {
    "contact": False,
    "timeline": False,
    "autoAdd": False,
    "autoJoin": True,
    'autoCancel':{"on":True,"members":3},	
    "autoLeave": True,
    "autoRead": False,
    "leaveRoom": False,
    "detectMention": True,
    "checkSticker": False,
    "kickMention": False,
    "potoMention": True,
    "lang":"JP",
    "Wc": False,
    "Lv": False,
    "Nk": False,
    "blacklist":{},
    "winvite": False,
    "wblacklist": False,
    "dblacklist": False,
    "gift":False,
    "likeOn":False,
    "timeline":False,
    "commentOn":True,
    "commentBlack":{},
    "wblack": False,
    "dblack": False,
    "clock": False,
    "cName":"",
    "cNames":"",
    "changeGroupPicture":False,
    "changePictureProfile":False,
    "welcome":"üôè‡∏™‡∏ß‡∏µ‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà(=^„Éª„Éª^=)",
    "kick":"üò±‡∏≠‡∏∏‡πä‡∏ï‡πä‡∏∞üò±",
    "bye":"üôå‡∏ö‡∏≤‡∏¢..",
    "Respontag":"üò≥",
    "eror":"‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡∏¥‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á ‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á *‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á*‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á ‡∏Ñ‡∏ó ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á",
    "spam":{},
    "invite": {},
    "winvite": False,
    "pnharfbot": {},
    "pname": {},
    "pro_name": {},
    "message1":"‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏ü‡∏•‡πå+‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå+‡πÅ‡∏Å‡πâ‡∏†‡∏≤‡∏©‡∏≤\nüíù‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏π‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ôüíù\nüëâ‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πà‡∏≤‡∏ö‡∏≠‡∏ó\n‡∏£‡∏≤‡∏Ñ‡∏≤300‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ôüíñ\n#‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏ß‡∏•‡∏∞100üëå\nüéÄ‡∏™‡∏ô‡πÉ‡∏à‡∏£‡∏µ‡∏ö‡∏ó‡∏±‡∏Å..‡∏ö‡∏≠‡∏ópython3‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏•‡πâ‡∏ô‡∏´‡∏•‡∏≤‡∏°üéÅ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á\n(‡∏ú‡∏°‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏Ñ‡πà15‡∏ô‡∏≤‡∏ó‡∏µ‡∏ô‡∏∞‡∏à‡πä‡∏∞)\nselfbot by:\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì\n‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£ \n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ",
    "message":"‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏î‡∏¢ Selfbot By ‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó\n‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏° unblock‡∏Å‡∏±‡∏ö‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏ó‡πà‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï",

    "userAgent": [
        "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; U; Linux amd64; rv:5.0) Gecko/20100101 Firefox/5.0 (Debian)",
        "Mozilla/5.0 (X11; U; Linux amd64; en-US; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 FirePHP/0.5",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux ppc; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux AMD64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1.1; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; U; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; rv:5.0) Gecko/20100101 Firefox/5.0"
    ],
    "mimic": {
        "copy": False,
        "status": False,
        "target": {}
    }
}

RfuProtect = {
    "protect": False,
    "cancelprotect": False,
    "inviteprotect": False,
    "linkprotect": False,
    "Protectguest": False,
    "Protectjoin": False,
    "autoAdd": True,
}

Setmain = {
    "foto": {},
}

read = {
    "readPoint": {},
    "readMember": {},
    "readTime": {},
    "setTime":{},
    "ROM": {}
}

myProfile = {
	"displayName": "",
	"statusMessage": "",
	"pictureStatus": ""
}

mimic = {
    "copy":False,
    "copy2":False,
    "status":False,
    "target":{}
    }
    
RfuCctv={
    "cyduk":{},
    "point":{},
    "sidermem":{}
}

rfuSet = {
    'setTime':{},
    'ricoinvite':{},
    'winvite':{},
    }

user1 = lineMID
user2 = ""
	
setTime = {}
setTime = rfuSet['setTime']

contact = line.getProfile() 
backup = line.getProfile() 
backup.dispalyName = contact.displayName 
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus

mulai = time.time() 
dangerMessage = ["cleanse","group cleansed.","mulai",".winebot",".kickall","mayhem","kick on","Kick","!kickall","nuke","‡∏ö‡∏¥‡∏ô","Kick","‡∏Å‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô","‡∏´‡∏ß‡∏î","‡πÄ‡∏ã‡∏•‡∏Å‡∏≤‡∏Å‡∏à‡∏±‡∏á","‡πÄ‡∏ï‡∏∞",".","‡∏õ‡∏•‡∏¥‡∏ß","vpn555","good","‡∏£‡∏±‡∏Å‡∏ô‡∏∞","vpn"]
fukgerMessage = [".‡∏Ñ‡∏ß‡∏¢","‡∏´‡∏µ","‡πÅ‡∏ï‡∏î","‡πÄ‡∏¢‡πá‡∏î‡πÅ‡∏°‡πà","‡πÄ‡∏¢‡πá‡∏î‡πÄ‡∏Ç‡πâ","‡∏Ñ.‡∏ß‡∏¢",".‡∏™‡∏±‡∏™","‡πÄ‡∏´‡∏µ‡πâ‡∏¢","‡πÑ‡∏≠‡πâ‡πÄ‡∏´‡∏µ‡πâ‡∏¢","‡∏û‡πà‡∏≠‡∏°‡∏∂‡∏á‡∏ï‡∏≤‡∏¢","‡πÑ‡∏≠‡πâ‡πÄ‡∏•‡∏ß","‡∏£‡∏∞‡∏¢‡∏≥","‡∏ä‡∏≤‡∏ï‡∏¥‡∏´‡∏°‡∏≤","‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏µ","‡πÄ‡∏ã‡∏•‡∏Å‡∏≤‡∏Å","‡πÑ‡∏≠‡πâ‡∏´‡∏≥","‡πÑ‡∏≠‡πâ‡πÄ‡∏´‡∏µ‡πâ‡∏¢","‡πÑ‡∏≠‡∏™‡∏±‡∏™","‡∏û‡πà‡∏≠‡∏á‡∏ï‡∏≤‡∏¢","‡∏™‡πâ‡∏ô‡∏ï‡∏µ‡∏ô","‡πÅ‡∏°‡πà‡∏°‡∏∂‡∏á‡∏≠‡πà‡∏∞","‡πÅ‡∏°‡πà‡∏°‡∏∂‡∏á‡∏î‡∏¥","‡∏û‡πà‡∏≠‡∏°‡∏∂‡∏á‡∏î‡∏¥"]

myProfile["displayName"] = lineProfile.displayName
myProfile["statusMessage"] = lineProfile.statusMessage
myProfile["pictureStatus"] = lineProfile.pictureStatus
#==============================================================================#
#==============================================================================#            
def Rapid1Say(mtosay):
    line.sendText(Rapid1To,mtosay)

def summon(to, nama):
    aa = ""
    bb = ""
    strt = int(14)
    akh = int(14)
    nm = nama
    for mm in nm:
      akh = akh + 2
      aa += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps(mm)+"},"""
      strt = strt + 6
      akh = akh + 4
      bb += "\xe2\x95\xa0 @x \n"
    aa = (aa[:int(len(aa)-1)])
    msg = Message()
    msg.to = to
    msg.text = "\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\n"+bb+"\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90"
    msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+aa+']}','EMTVER':'4'}
    print ("TAG ALL")
    try:
       line.sendMessage(msg)
    except Exception as error:
       print(error)

def restartBot():
    print ("RESTART SERVER")
    time.sleep(3)
    python = sys.executable
    os.execl(python, python, *sys.argv)
    
def logError(text):
    line.log("[ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ] " + str(text))
    time_ = datetime.now()
    with open("errorLog.txt","a") as error:
        error.write("\n[%s] %s" % (str(time), text))

def sendMention(to, mid, firstmessage, lastmessage):
    try:
        arrData = ""
        text = "%s " %(str(firstmessage))
        arr = []
        mention = "@x "
        slen = str(len(text))
        elen = str(len(text) + len(mention) - 1)
        arrData = {'S':slen, 'E':elen, 'M':mid}
        arr.append(arrData)
        text += mention + str(lastmessage)
        line.sendMessage(to, text, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def sendMessage(to, text, contentMetadata={}, contentType=0):
    mes = Message()
    mes.to, mes.from_ = to, profile.mid
    mes.text = text
    mes.contentType, mes.contentMetadata = contentType, contentMetadata
    if to not in messageReq:
        messageReq[to] = -1
    messageReq[to] += 1
        
def sendMessageWithMention(to, lineMID):
    try:
        aa = '{"S":"0","E":"3","M":'+json.dumps(lineMID)+'}'
        text_ = '@x '
        line.sendMessage(to, text_, contentMetadata={'MENTION':'{"MENTIONEES":['+aa+']}'}, contentType=0)
    except Exception as error:
        logError(error)

def mentionMembers(to, mid):
    try:
        arrData = ""
        textx = "‚ïî‚ïê‚ïê[Mention {} User]\n‚ï† ".format(str(len(mid)))
        arr = []
        no = 1
        for i in mid:
            mention = "@x\n"
            slen = str(len(textx))
            elen = str(len(textx) + len(mention) - 1)
            arrData = {'S':slen, 'E':elen, 'M':i}
            arr.append(arrData)
            textx += mention
            if no < len(mid):
                no += 1
                textx += "‚ï† "
            else:
                try:
                    textx += "‚ïö‚ïê‚ïê[ {} ]".format(str(line.getGroup(to).name))
                except:
                    pass
        line.sendMessage(to, textx, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def myhelp():
    myHelp = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚îÄ‚îÖ‚û¥ÕúÕúÕ°‚úæ‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£Ô∑Ω‚úØÕúÕ°‚ù¶‚îÖ‚îÄ
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
         ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ ‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó
‚ï†‚ùÇ‚û£ ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùÇ‚û£ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
‚ï†‚ùÇ‚û£ ‡πÇ‡∏ã‡πÄ‡∏ä‡∏•‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡πà‡∏¢
‚ï†‚ùÇ‚û£ ‡∏û‡∏π‡∏îMp3‡∏†‡∏≤‡∏©‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
‚ï†‚ùÇ‚û£ ‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
‚ï†‚ùÇ‚û£ ‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå
‚ï∞‚ïê‚îÄ‚îÖ‚û¥ÕúÕúÕ°‚úæÔ∑Ω‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£Ô∑Ω‚úØÕúÕ°‚ù¶‚îÖ‚îÄ

 THAILAND BOT YOU
  ID LINE  you-kd"""
    return myHelp

def listgrup():
    listGrup = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£ 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
         ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ ‡πÅ‡∏≠‡∏î
‚ï†‚ùÇ‚û£ ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùÇ‚û£ ‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùÇ‚û£ ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùÇ‚û£ ‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùÇ‚û£ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùÇ‚û£ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùÇ‚û£ ‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùÇ‚û£ ‡πÅ‡∏à‡πä‡∏∞
‚ï†‚ùÇ‚û£ ‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡∏î‡∏µ
‚ï†‚ùÇ‚û£ ‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á
‚ï†‚ùÇ‚û£ ‡∏Ñ‡∏ó‡∏•‡πà‡∏≠‡∏á
‚ï†‚ùÇ‚û£ ‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≠‡∏á
‚ï†‚ùÇ‚û£ ‡∏à‡∏±‡∏ö
‚ï†‚ùÇ‚û£ ‡πÄ‡∏•‡∏¥‡∏Å‡∏à‡∏±‡∏ö
‚ï†‚ùÇ‚û£ ‡∏à‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà
‚ï†‚ùÇ‚û£ ‡∏≠‡πà‡∏≤‡∏ô
‚ï†‚ùÇ‚û£ ‡πÄ‡∏ä‡πá‡∏Ñ
‚ï∞‚ïê‚ú∞‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£"""
    return listGrup

def socmedia():
    socMedia = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
      ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÇ‡∏ã‡πÄ‡∏ä‡∏•‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡πà‡∏¢
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û [‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û]
‚ï†‚ùÇ‚û£ ‡∏¢‡∏π‡∏ó‡∏π‡∏õ [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°]
‚ï†‚ùÇ‚û£ ‡πÄ‡∏û‡∏•‡∏á [‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏•‡∏á]
‚ï†‚ùÇ‚û£ ‡∏´‡∏ô‡∏±‡∏á [‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á]
‚ï†‚ùÇ‚û£ ‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ [‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠]
‚ï†‚ùÇ‚û£ ‡∏£‡∏π‡∏õ‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô [‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏π‡∏õ]
‚ï†‚ùÇ‚û£ ‡∏Å‡∏π‡πÄ‡∏Å‡∏¥‡πâ‡∏• [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°]
‚ï†‚ùÇ‚û£ ‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏õ‡πä
‚ï∞‚ïê‚ú∞‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£"""
    return socMedia

def helpset():
    helpSet = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
         ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ ‡∏â‡∏±‡∏ô
‚ï†‚ùÇ‚û£ ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á
‚ï†‚ùÇ‚û£ ‡πÑ‡∏≠‡∏î‡∏µ
‚ï†‚ùÇ‚û£ ‡∏ä‡∏∑‡πà‡∏≠‡∏â‡∏±‡∏ô
‚ï†‚ùÇ‚û£ ‡∏ï‡∏±‡∏™‡∏â‡∏±‡∏ô
‚ï†‚ùÇ‚û£ ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£
‚ï†‚ùÇ‚û£ ‡∏£‡∏π‡∏õ‡∏õ‡∏Å
‚ï†‚ùÇ‚û£ ‡∏™‡∏õ‡∏µ‡∏î
‚ï†‚ùÇ‚û£ ‡∏î‡∏∂‡∏á‡πÑ‡∏≠‡∏î‡∏µ @
‚ï†‚ùÇ‚û£ ‡∏ä‡∏∑‡πà‡∏≠ @
‚ï†‚ùÇ‚û£ ‡∏ï‡∏±‡∏™ @
‚ï†‚ùÇ‚û£ ‡∏£‡∏π‡∏õ @
‚ï†‚ùÇ‚û£ ‡∏õ‡∏Å @
‚ï†‚ùÇ‚û£ ‡∏Ñ‡∏ó @
‚ï†‚ùÇ‚û£ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏î‡∏≥
‚ï†‚ùÇ‚û£ ‡∏•‡∏á‡∏î‡∏≥
‚ï†‚ùÇ‚û£ ‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥
‚ï†‚ùÇ‚û£ ‡πÑ‡∏•‡πà‡∏î‡∏≥
‚ï†‚ùÇ‚û£ ‡∏õ‡∏ß‡∏î‡∏ï‡∏±‡∏ö
‚ï†‚ùÇ‚û£ ‡πÑ‡∏ß‡∏£‡∏±‡∏™
‚ï†‚ùÇ‚û£ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
‚ï†‚ùÇ‚û£ ‡∏£‡∏µ‡∏ö‡∏≠‡∏ó
‚ï†‚ùÇ‚û£ ‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏•
‚ï†‚ùÇ‚û£ ‡∏≠‡∏≠‡∏ô
‚ï†‚ùÇ‚û£ ‡πÅ‡∏ö‡∏ô @
‚ï†‚ùÇ‚û£ ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô @
‚ï†‚ùÇ‚û£ ‡∏•‡∏ö‡∏£‡∏±‡∏ô
‚ï†‚ùÇ‚û£ ‡∏î‡∏∂‡∏á @
‚ï†‚ùÇ‚û£ ‡∏£‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° @
‚ï†‚ùÇ‚û£ ‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @
‚ï†‚ùÇ‚û£ ‡∏£‡∏±‡∏ô:
‚ï†‚ùÇ‚û£ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
‚ï†‚ùÇ‚û£ ‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°:
‚ï†‚ùÇ‚û£ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°:
‚ï†‚ùÇ‚û£ ‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°
‚ï†‚ùÇ‚û£ ‡πÑ‡∏õ @
‚ï†‚ùÇ‚û£ ‡∏™‡∏≠‡∏¢ @
‚ï†‚ùÇ‚û£ ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô @
‚ï†‚ùÇ‚û£ ‡∏õ‡∏•‡∏¥‡∏ß @
‚ï†‚ùÇ‚û£ ‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
‚ï∞‚ïê‚ú∞‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£"""
    return helpSet

def helpsetting():
    helpSetting = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
         ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô
‚ï†‚ùÇ‚û£ ‡∏Å‡∏±‡∏ô‡∏¢‡∏Å/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å
‚ï†‚ùÇ‚û£ ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç
‚ï†‚ùÇ‚û£ ‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùÇ‚û£ ‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤/‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î/‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤/‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å/‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î/‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πä‡∏Å/‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πä‡∏Å
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ/‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô/‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ/‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2/‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏à‡πá‡∏ö/‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏à‡πá‡∏ö
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πä‡∏Å/‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πä‡∏Å
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô/‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏Ç‡∏Å/‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏Ç‡∏Å
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡πà‡∏á‡πÅ‡∏Ç‡∏Å/‡∏õ‡∏¥‡∏î‡∏™‡πà‡∏á‡πÅ‡∏Ç‡∏Å
‚ï†‚ùÇ‚û£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞/‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞
‚ï∞‚ïê‚ïê‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£"""
    return helpSetting

def helptexttospeech():
    helpTextToSpeech =   """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£ 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏π‡∏îMp3‡∏†‡∏≤‡∏©‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ af : ‡πÅ‡∏≠‡∏ü‡∏£‡∏¥‡∏Å‡∏±‡∏ô
‚ï†‚ùÇ‚û£ sq : ‡∏≠‡∏±‡∏•‡πÄ‡∏ö‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ hy : ‡∏≠‡∏≤‡πÄ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ bn : ‡πÄ‡∏ö‡∏ô‡∏à‡∏≤‡∏•‡∏µ
‚ï†‚ùÇ‚û£ zh-cn : ‡∏à‡∏µ‡∏ô
‚ï†‚ùÇ‚û£ zh-tw : ‡πÉ‡∏ï‡πâ‡∏´‡∏ß‡∏±‡∏ô
‚ï†‚ùÇ‚û£ cs : ‡πÄ‡∏ä‡πá‡∏Å
‚ï†‚ùÇ‚û£ nl : ‡∏î‡∏±‡∏ä
‚ï†‚ùÇ‚û£ en : ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
‚ï†‚ùÇ‚û£ en-us : ‡∏™‡∏´‡∏£‡∏±‡∏ê
‚ï†‚ùÇ‚û£ el : ‡∏Å‡∏£‡∏µ‡∏Å
‚ï†‚ùÇ‚û£ id : ‡∏≠‡∏¥‡∏ô‡πÇ‡∏î‡∏ô‡∏µ‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ it : ‡∏≠‡∏¥‡∏ï‡∏≤‡∏•‡∏µ
‚ï†‚ùÇ‚û£ ja : ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
‚ï†‚ùÇ‚û£ ko : ‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ
‚ï†‚ùÇ‚û£ la : ‡∏•‡∏≤‡∏ï‡∏¥‡∏ô
‚ï†‚ùÇ‚û£ ro : ‡πÇ‡∏£‡∏°‡∏≤‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ ru : ‡∏£‡∏±‡∏™‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ sr : ‡πÄ‡∏ã‡∏≠‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå
‚ï†‚ùÇ‚û£ th : ‡πÑ‡∏ó‡∏¢
‚ï†‚ùÇ‚û£ vi : ‡πÄ‡∏ß‡∏µ‡∏¢‡∏î‡∏ô‡∏≤‡∏°
‚ï∞‚ïê‚ú∞‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£

„Äå‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ : say-th ‡∏ú‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏π‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö„Äç"""
    return helpTextToSpeech
    
def helplanguange():
    helpLanguange =    """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
       ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
 ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ af : ‡πÅ‡∏≠‡∏ü‡∏£‡∏¥‡∏Å‡∏±‡∏ô
‚ï†‚ùÇ‚û£ sq : ‡∏≠‡∏±‡∏•‡πÄ‡∏ö‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ ar : ‡∏≠‡∏£‡∏≤‡∏ö‡∏¥‡∏Ñ
‚ï†‚ùÇ‚û£ hy : ‡∏≠‡∏≤‡πÄ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ bn : ‡∏ö‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏µ‡πà
‚ï†‚ùÇ‚û£ bs : ‡∏ö‡∏≠‡∏™‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ bg : ‡∏ö‡∏±‡∏á‡πÅ‡∏Å‡πÄ‡∏£‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ zh-cn : ‡∏à‡∏µ‡∏ô
‚ï†‚ùÇ‚û£ zh-tw : ‡πÉ‡∏ï‡πâ‡∏´‡∏ß‡∏±‡∏ô
‚ï†‚ùÇ‚û£ cs : ‡πÄ‡∏ä‡πá‡∏Å
‚ï†‚ùÇ‚û£ nl : ‡∏î‡∏±‡∏ä
‚ï†‚ùÇ‚û£ en : ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
‚ï†‚ùÇ‚û£ et : ‡πÄ‡∏≠‡∏™‡πÇ‡∏ï‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô
‚ï†‚ùÇ‚û£ el : ‡∏Å‡∏£‡∏µ‡∏Å
‚ï†‚ùÇ‚û£ id : ‡∏≠‡∏¥‡∏ô‡πÇ‡∏î‡∏ô‡∏µ‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ ga : ‡πÑ‡∏≠‡∏£‡∏¥‡∏™
‚ï†‚ùÇ‚û£ it : ‡∏≠‡∏¥‡∏ï‡∏≤‡∏•‡∏µ
‚ï†‚ùÇ‚û£ ja : ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
‚ï†‚ùÇ‚û£ kn : ‡πÅ‡∏Ñ‡∏ô‡∏≤‡∏î‡∏≤
‚ï†‚ùÇ‚û£ la : ‡∏•‡∏≤‡∏ï‡∏¥‡∏ô
‚ï†‚ùÇ‚û£ lv : ‡∏•‡∏±‡∏ï‡πÄ‡∏ß‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ ms : ‡∏°‡∏≤‡πÄ‡∏•‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ mt : ‡∏°‡∏≠‡∏•‡πÄ‡∏ï‡∏™
‚ï†‚ùÇ‚û£ mn : ‡∏°‡∏≠‡∏á‡πÇ‡∏Å‡πÄ‡∏•‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ my : ‡∏û‡∏°‡πà‡∏≤
‚ï†‚ùÇ‚û£ fa : ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ pt : ‡πÇ‡∏õ‡∏£‡∏ï‡∏∏‡πÄ‡∏Å‡∏®
‚ï†‚ùÇ‚û£ ro : ‡πÇ‡∏£‡∏°‡∏≤‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ ru : ‡∏£‡∏±‡∏™‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùÇ‚û£ th : ‡πÑ‡∏ó‡∏¢
‚ï†‚ùÇ‚û£ zu : ‡∏ã‡∏π‡∏•‡∏π
‚ï∞‚ïê‚ú∞‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£
 
 „Äå‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ : tr-th hello„Äç"""
    return helpLanguange
    
def helpkicker():
    helpKickker = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
           ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå
  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÖ‚ïê‡¶á€ù‡§à‚ïê‚îÖ‚îÄ‚îÄ‚îÄ‚îÄ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùÇ‚û£ ‡∏°‡∏≤
‚ï†‚ùÇ‚û£ ‡∏≠‡∏≠‡∏Å
‚ï†‚ùÇ‚û£ ‡∏Ñ‡∏¥‡∏Å
‚ï†‚ùÇ‚û£ ‡∏Ñ‡∏¥‡∏Å‡∏™‡∏õ‡∏µ‡∏î
‚ï†‚ùÇ‚û£ 1-4‡∏•‡∏∏‡∏¢
‚ï†‚ùÇ‚û£ ‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å
‚ï†‚ùÇ‚û£ ‡∏≠‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï∞‚ïê‚ú∞‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£"""
    return helpKickker
#==============================================================================#
def lineBot(op):
    try:
        if op.type == 0:
            return
        if op.type == 5:
            if settings["autoAdd"] == True:
                line.blockContact(op.param1)
        if op.type == 13:
            if lineMID in op.param3:
                G = line.getGroup(op.param1)
                if settings["autoJoin"] == True:
                    if settings["autoCancel"]["on"] == True:
                        if len(G.members) <= settings["autoCancel"]["members"]:
                            line.rejectGroupInvitation(op.param1)
                        else:
                            line.acceptGroupInvitation(op.param1)
                    else:
                        line.acceptGroupInvitation(op.param1)
                elif settings["autoCancel"]["on"] == True:
                    if len(G.members) <= settings["autoCancel"]["members"]:
                        line.rejectGroupInvitation(op.param1)
            else:
                Inviter = op.param3.replace("",',')
                InviterX = Inviter.split(",")
                matched_list = []
                for tag in settings["blacklist"]:
                    matched_list+=[str for str in InviterX if str == tag]
                if matched_list == []:
                    pass
                else:
                    line.cancelGroupInvitation(op.param1, matched_list)				
#        if op.type == 13:
#            group = line.getGroup(op.param1)
#            if settings["autoJoin"] == True:
#                line.acceptGroupInvitation(op.param1)
        if op.type == 24:
            if settings["autoLeave"] == True:
                line.leaveRoom(op.param1)
                                     
        if op.type == 25:
            msg = op.message
            if msg.contentType == 13:
            	if settings["winvite"] == True:
                     if msg._from in admin:
                         _name = msg.contentMetadata["displayName"]
                         invite = msg.contentMetadata["mid"]
                         groups = line.getGroup(msg.to)
                         pending = groups.invitee
                         targets = []
                         for s in groups.members:
                             if _name in s.displayName:
                                 line.sendText(msg.to,"-> " + _name + " \n‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                                 break
                             elif invite in settings["blacklist"]:
                                 line.sendText(msg.to,"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢, " + _name + " ‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥")
                                 line.sendText(msg.to,"‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á!, \n‚û°‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥‚û°‡∏î‡∏∂‡∏á" )
                                 break                             
                             else:
                                 targets.append(invite)
                         if targets == []:
                             pass
                         else:
                             for target in targets:
                                 try:
                                     line.findAndAddContactsByMid(target)
                                     line.inviteIntoGroup(msg.to,[target])
                                     line.sendText(msg.to,"‡πÄ‡∏ä‡∏¥‡∏ç‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß : \n‚û°" + _name)
                                     settings["winvite"] = False
                                     break
                                 except:
                                     try:
                                         line.findAndAddContactsByMid(invite)
                                         line.inviteIntoGroup(op.param1,[invite])
                                         settings["winvite"] = False
                                     except:
                                         line.sendText(msg.to,"üòß‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏üò©‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÄ‡∏ä‡∏¥‡∏çüò®")
                                         settings["winvite"] = False
                                         break
                                         
        if op.type == 25:
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0:
                if sender != line.profile.mid:
                    to = sender
                else:
                    to = receiver
            else:
                to = receiver
            if msg.contentType == 0:
                if text is None:
                    return
#==============================================================================#
                if "‡∏û‡∏π‡∏î " in msg.text.lower():
                    spl = re.split("‡∏û‡∏π‡∏î ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        mts = spl[1]
                        mtsl = mts.split()
                        mtsTimeArg = len(mtsl) - 1
                        mtsTime = mtsl[mtsTimeArg]
                        del mtsl[mtsTimeArg]
                        mtosay = " ".join(mtsl)
                        global Rapid1To
                        Rapid1To = msg.to
                        RapidTime = mtsTime
                        rmtosay = []
                        for count in range(0,int(RapidTime)):
                            rmtosay.insert(count,mtosay)
                        p = Pool(20)
                        p.map(Rapid1Say,rmtosay)
                        p.close()
                if text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á':
                    myHelp = myhelp()
                    line.sendMessage(to, str(myHelp))
                elif text.lower() == '‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó':
                    helpSet = helpset()
                    line.sendMessage(to, str(helpSet))
                    sendMessageWithMention(to, lineMID)
                elif text.lower() == '‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    listGrup = listgrup()
                    line.sendMessage(to, str(listGrup))
                elif text.lower() == '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤':
                    helpSetting = helpsetting()
                    line.sendMessage(to, str(helpSetting))
                elif text.lower() == '‡πÇ‡∏ã‡πÄ‡∏ä‡∏•‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡πà‡∏¢':
                    socMedia = socmedia()
                    line.sendMessage(to, str(socMedia))
                elif text.lower() == '‡∏û‡∏π‡∏îMp3‡∏†‡∏≤‡∏©‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ':
                    helpTextToSpeech = helptexttospeech()
                    line.sendMessage(to, str(helpTextToSpeech))
                elif text.lower() == '‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤':
                    helpLanguange = helplanguange()
                    line.sendMessage(to, str(helpLanguange))
                elif text.lower() == '‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå':
                    helpKickker = helpkickker()
                    line.sendMessage(to, str(helpKickker))
#==============================================================================#
                elif text.lower() == '‡∏™‡∏õ‡∏µ‡∏î':
                    start = time.time()
                    line.sendMessage(to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
                    elapsed_time = time.time() - start
                    line.sendMessage(msg.to, "[ %s Seconds ] [ " % (elapsed_time) + str(int(round((time.time() - start) * 1000)))+" ms ]")                
                elif text.lower() == '‡∏£‡∏µ‡∏ö‡∏≠‡∏ó':
                    line.sendMessage(to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà ... ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ..")
                    line.sendMessage(to, "Success Restarting.")
                    restartBot()
                elif text.lower() == '‡∏≠‡∏≠‡∏ô':
                    timeNow = time.time()
                    runtime = timeNow - botStart
                    runtime = format_timespan(runtime)
                    line.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó {}".format(str(runtime)))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•':
                    try:
                        arr = []
                        owner = ""
                        creator = line.getContact(owner)
                        contact = line.getContact(lineMID)
                        grouplist = line.getGroupIdsJoined()
                        contactlist = line.getAllContactIds()
                        blockedlist = line.getBlockedContactIds()
                        ret_ = "‚ïî‚ïê‚ïê[ ‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£]"
                        ret_ += "\n‚ï†€ù ‡∏ä‡∏∑‡πà‡∏≠ ‚ïê {}".format(contact.displayName)
                        ret_ += "\n‚ï†€ù ‡∏Å‡∏•‡∏∏‡πà‡∏° ‚ïê {}".format(str(len(grouplist)))
                        ret_ += "\n‚ï†€ù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‚ïê {}".format(str(len(contactlist)))
                        ret_ += "\n‚ï†€ù ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ ‚ïê {}".format(str(len(blockedlist)))
                        ret_ += "\n‚ï†‚ïê‚ïê[‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞] ‚ïê {}".format(contact.statusMessage)
                        ret_ += "\n‚ï†€ù ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á ‚ïê {}".format(creator.displayName)
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£]"
                        line.sendContact(to, owner)
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
#==============================================================================#
                elif text.lower() == '‡πÄ‡∏ä‡πá‡∏Ñ':
                    try:
                        ret_ = "‚ïî‚ïê‚ïê‚ïê‚ïê[ Status ]‚ïê‚ïê‚ïê‚ïê‚ïê‚îì"
                        if settings["autoAdd"] == True: ret_ += "\n‚ï† ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‚úî"
                        else: ret_ += "\n‚ï† ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ   ‚úò "
                        if settings["autoJoin"] == True: ret_ += "\n‚ï† ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡πÇ‡∏ï‡πâ ‚úî"
                        else: ret_ += "\n‚ï† ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡πÇ‡∏ï‡πâ    ‚úò "
                        if settings["Wc"] == True: ret_ += "\n‚ï† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‚úî"
                        else: ret_ += "\n‚ï† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å    ‚úò "
                        if settings["Lv"] == True: ret_ += "\n‚ï† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≥‡∏•‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‚úî"
                        else: ret_ += "\n‚ï† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≥‡∏•‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å    ‚úò "
                        if settings["Nk"] == True: ret_ += "\n‚ï† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏•‡∏ö ‚úî"
                        else: ret_ += "\n‚ï† ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏•‡∏ö    ‚úò "
                        if settings["autoCancel"]["on"] == True:ret_+="\n‚ï† ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ä‡∏¥‡∏ç‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤: " + str(settings["autoCancel"]["members"]) + " ‚Üí ‚úî"
                        else: ret_ += "\n‚ï† ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ä‡∏¥‡∏ç    ‚úò "						
                        if settings["autoLeave"] == True: ret_ += "\n‚ï† ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏° ‚úî"
                        else: ret_ += "\n‚ï† ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏° ‚úò "
                        if settings["autoRead"] == True: ret_ += "\n‚ï† ‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ ‚úî"
                        else: ret_ += "\n‚ï† ‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ   ‚úò "				
                        if settings["checkSticker"] == True: ret_ += "\n‚ï† Sticker ‚úî"
                        else: ret_ += "\n‚ï† Sticker        ‚úò "
                        if settings["detectMention"] == True: ret_ += "\n‚ï† ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚úî"
                        else: ret_ += "\n‚ï† ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚úò "
                        if settings["potoMention"] == True: ret_ += "\n‚ï† ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚úî"
                        else: ret_ += "\n‚ï† ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚úò "
                        if settings["kickMention"] == True: ret_ += "\n‚ï† ‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚úî"
                        else: ret_ += "\n‚ï† ‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ ‚úò "						
                        if RfuProtect["inviteprotect"] == True: ret_ += "\n‚ï† ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç ‚úî"
                        else: ret_ += "\n‚ï† ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç ‚úò "
                        if RfuProtect["cancelprotect"] == True: ret_ += "\n‚ï† ‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç ‚úî"
                        else: ret_ += "\n‚ï† ‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç ‚úò "
                        if RfuProtect["protect"] == True: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô ‚úî"
                        else: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô ‚úò "
                        if RfuProtect["linkprotect"] == True: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á ‚úî"
                        else: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á ‚úò "
                        if RfuProtect["Protectguest"] == True: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‚úî"
                        else: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‚úò "
                        if RfuProtect["Protectjoin"] == True: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° ‚úî"
                        else: ret_ += "\n‚ï† ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° ‚úò "						
                        ret_ += "\n‚ïö‚ïê‚ïê‚ïê‚ïê[ Status ]‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ"
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ':
                    settings["autoAdd"] = True
                    line.sendMessage(to, "Autoblock enabled.")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Ñ':
                    settings["autoAdd"] = False
                    line.sendMessage(to, "Autoblock disabled.")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤':
                    settings["autoJoin"] = True
                    line.sendMessage(to, "Autojoin enabled.")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤':
                    settings["autoJoin"] = False
                    line.sendMessage(to, "Auto Join disabled.")
                elif "gcancel:" in msg.text:
                    try:
                        strnum = msg.text.replace("gcancel:","")
                        if strnum == "off":
                                settings["autoCancel"]["on"] = False
                                if settings["lang"] == "JP":
                                    line.sendText(msg.to,str(settings["eror"]))
                                else:
                                    line.sendText(msg.to,"ÂÖ≥‰∫ÜÈÇÄËØ∑ÊãíÁªù„ÄÇË¶ÅÊó∂ÂºÄËØ∑ÊåáÂÆö‰∫∫Êï∞ÂèëÈÄÅ")
                        else:
                                num =  int(strnum)
                                settings["autoCancel"]["on"] = True
                                if settings["lang"] == "JP":
                                    line.sendText(msg.to, " ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á" + strnum + "‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
                                else:
                                    line.sendText(msg.to,strnum + "‰Ωø‰∫∫‰ª•‰∏ãÁöÑÂ∞èÁªÑÁî®Ëá™Âä®ÈÇÄËØ∑ÊãíÁªù")
                    except:
                        if settings["lang"] == "JP":
                                line.sendText(msg.to,str(settings["eror"]))
                        else:
                                line.sendText(msg.to,"Bizarre ratings")					
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å':
                    settings["autoLeave"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å':
                    settings["autoLeave"] = False
                    line.sendMessage(to, "Autoleave disabled.")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô':
                    settings["autoRead"] = True
                    line.sendMessage(to, "Autoread message enabled.")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô':
                    settings["autoRead"] = False
                    line.sendMessage(to, "Autoread message disabled.")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πä‡∏Å':
                    settings["checkSticker"] = True
                    line.sendMessage(to, "Check sticker enabled.")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏ï‡∏¥‡πä‡∏Å':
                    settings["checkSticker"] = False
                    line.sendMessage(to, "Check sticker disabled.")                
#==============================================================================#
                elif text.lower() == '‡∏â‡∏±‡∏ô':
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, lineMID)
                elif text.lower() == '‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á':
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, "u06779df38010e6e1509ca0499acaa50")
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ':
                    line.sendMessage(msg.to,"[MID]\n" +  lineMID)
                elif text.lower() == '‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô':
                    line.sendMessage(op.param1, str(settings["comment"]))
                elif text.lower() == '‡∏ó‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤':
                    line.sendMessage(op.param1, str(settings["welcome"]))
                elif text.lower() == '‡∏ó‡∏±‡∏Å‡∏≠‡∏≠‡∏Å':
                    line.sendMessage(op.param1, str(settings["bye"]))
                elif text.lower() == '‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞':
                    line.sendMessage(op.param1, str(settings["kick"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î':
                    line.sendMessage(op.param1, str(settings["message"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ':
                    line.sendMessage(op.param1, str(settings["Respontag"]))
                elif text.lower() == '‡∏ä‡∏∑‡πà‡∏≠‡∏â‡∏±‡∏ô':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"[DisplayName]\n" + me.displayName)
                elif text.lower() == '‡∏ï‡∏±‡∏™‡∏â‡∏±‡∏ô':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"[StatusMessage]\n" + me.statusMessage)
                elif text.lower() == '‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£':
                    me = line.getContact(lineMID)
                    line.sendImageWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus)
                elif text.lower() == '‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠‡πÇ‡∏õ‡∏£':
                    me = line.getContact(lineMID)
                    line.sendVideoWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus + "/vp")
                elif text.lower() == '‡∏£‡∏π‡∏õ‡∏õ‡∏Å':
                    me = line.getContact(lineMID)
                    cover = line.getProfileCoverURL(lineMID)    
                    line.sendImageWithURL(msg.to, cover)
                elif text.lower() == '‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≠‡∏á':
                    gs = line.getGroup(to)
                    targets = []
                    for g in gs.members:
                        if g.displayName in "":
                            targets.append(g.mid)
                    if targets == []:
                        line.sendMessage(to, "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâüòÇ")
                    else:
                        mc = ""
                        for target in targets:
                            mc += sendMessageWithMention(to,target) + "\n"
                        line.sendMessage(to, mc)
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á':
                    gs = line.getGroup(to)
                    lists = []
                    for g in gs.members:
                        if g.displayName in "":
                            lists.append(g.mid)
                    if lists == []:
                        line.sendMessage(to, "‡πÑ‡∏°‡πà‡∏°‡∏µmid‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ôü§ó")
                    else:
                        mc = ""
                        for mi_d in lists:
                            mc += "->" + mi_d + "\n"
                        line.sendMessage(to,mc)
                elif text.lower() == '‡∏Ñ‡∏ó‡∏•‡πà‡∏≠‡∏á':
                    gs = line.getGroup(to)
                    lists = []
                    for g in gs.members:
                        if g.displayName in "":
                            lists.append(g.mid)
                    if lists == []:
                        line.sendMessage(to, "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâüòÇ")
                    else:
                        for ls in lists:
                            contact = line.getContact(ls)
                            mi_d = contact.mid
                            line.sendContact(to, mi_d)
                elif msg.text.lower().startswith("‡∏Ñ‡∏ó "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            mi_d = contact.mid
                            line.sendContact(msg.to, mi_d)
                elif msg.text.lower().startswith("‡∏î‡∏∂‡∏á‡πÑ‡∏≠‡∏î‡∏µ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        ret_ = "[ Mid User ]"
                        for ls in lists:
                            ret_ += "\n{}" + ls
                        line.sendMessage(msg.to, str(ret_))
                elif msg.text.lower().startswith("‡∏ä‡∏∑‡πà‡∏≠ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ Display Name ]\n" + contact.displayName)
                elif msg.text.lower().startswith("‡∏ï‡∏±‡∏™ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ Status Message ]\n{}" + contact.statusMessage)
                elif msg.text.lower().startswith("‡∏£‡∏π‡∏õ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureStatus
                            line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureStatus + "/vp"
                            line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏õ‡∏Å "):
                    if line != None:
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                path = line.getProfileCoverURL(ls)
                                line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏Å‡πä‡∏≠‡∏õ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        for mention in mentionees:
                            contact = mention["M"]
                            break
                        try:
                            line.cloneContactProfile(contact)
                            line.sendMessage(msg.to, "üòä‡∏à‡∏±‡∏î‡πÑ‡∏õüòä")
                        except:
                            line.sendMessage(msg.to, "üòä‡∏ö‡πà‡πÑ‡∏î‡πâüòä")
                            
                elif text.lower() == '‡∏Ñ‡∏∑‡∏ô‡∏£‡πà‡∏≤‡∏á':
                    try:
                        lineProfile.displayName = str(myProfile["displayName"])
                        lineProfile.statusMessage = str(myProfile["statusMessage"])
                        lineProfile.pictureStatus = str(myProfile["pictureStatus"])
                        line.updateProfileAttribute(8, lineProfile.pictureStatus)
                        line.updateProfile(lineProfile)
                        line.sendMessage(msg.to, "Berhasil restore profile")
                    except:
                        line.sendMessage(msg.to, "Gagal restore profile")
						
#==============================================================================#
                elif msg.text.lower().startswith("mimicadd "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            settings["mimic"]["target"][target] = True
                            line.sendMessage(msg.to,"Mimic has been added as")
                            break
                        except:
                            line.sendMessage(msg.to,"Added Target Fail !")
                            break
                elif msg.text.lower().startswith("mimicdel "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            del settings["mimic"]["target"][target]
                            line.sendMessage(msg.to,"Mimic deleting succes...")
                            break
                        except:
                            line.sendMessage(msg.to,"Deleted Target Fail !")
                            break
                elif text.lower() == 'mimiclist':
                    if settings["mimic"]["target"] == {}:
                        line.sendMessage(msg.to,"Tidak Ada Target")
                    else:
                        mc = "‚ïî‚ïê‚ïê[ Mimic List ]"
                        for mi_d in settings["mimic"]["target"]:
                            mc += "\n‚ï† "+line.getContact(mi_d).displayName
                        line.sendMessage(msg.to,mc + "\n‚ïö‚ïê‚ïê[ Finish ]")
                    
                elif "mimic" in msg.text.lower():
                    sep = text.split(" ")
                    mic = text.replace(sep[0] + " ","")
                    if mic == "on":
                        if settings["mimic"]["status"] == False:
                            settings["mimic"]["status"] = True
                            line.sendMessage(msg.to,"Mimic enabled.")
                    elif mic == "off":
                        if settings["mimic"]["status"] == True:
                            settings["mimic"]["status"] = False
                            line.sendMessage(msg.to,"Mimic disabled.")
                elif "Spam " in msg.text:
                    txt = msg.text.split(" ")
                    jmlh = int(txt[2])
                    teks = msg.text.replace("Spam "+str(txt[1])+" "+str(jmlh)+" ","")
                    tulisan = jmlh * (teks+"\n")
                    if txt[1] == "on":
                        if jmlh <= 100000:
                           for x in range(jmlh):
                               line.sendMessage(msg.to, teks)
                        else:
                           line.sendMessage(msg.to, "Out of Range!")
                    elif txt[1] == "off":
                        if jmlh <= 100000:
                            line.sendMessage(msg.to, tulisan)
                        else:
                            line.sendMessage(msg.to, "Out Of Range!")
#==============================================================================#
                elif text.lower() == '‡πÅ‡∏≠‡∏î':
                    group = line.getGroup(to)
                    GS = group.creator.mid
                    line.sendContact(to, GS)
                    line.sendMessage(to, "‚òù‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡πà‡∏∞‡∏Ñ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ")
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    gid = line.getGroup(to)
                    line.sendMessage(to, "‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏° \n" + gid.id)
                elif text.lower() == '‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    group = line.getGroup(to)
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    line.sendImageWithURL(to, path)
                elif text.lower() == '‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    gid = line.getGroup(to)
                    line.sendMessage(to, "‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° -> \n" + gid.name)
                elif text.lower() == '‡∏•‡∏¥‡πâ‡∏á':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            ticket = line.reissueGroupTicket(to)
                            line.sendMessage(to, "‡∏•‡∏¥‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°\nhttps://line.me/R/ti/g/{}".format(str(ticket)))
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                        else:
                            group.preventedJoinByTicket = False
                            line.updateGroup(group)
                            line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == True:
                            line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                        else:
                            group.preventedJoinByTicket = True
                            line.updateGroup(group)
                            line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    group = line.getGroup(to)
                    try:
                        gCreator = group.creator.displayName
                    except:
                        gCreator = "‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ"
                    if group.invitee is None:
                        gPending = "0"
                    else:
                        gPending = str(len(group.invitee))
                    if group.preventedJoinByTicket == True:
                        gQr = "‡∏õ‡∏¥‡∏î"
                        gTicket = "‡πÑ‡∏°‡πà‡∏™‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏¥‡πâ‡∏á‡πÑ‡∏î‡πâ"
                    else:
                        gQr = "‡πÄ‡∏õ‡∏¥‡∏î"
                        gTicket = "https://line.me/R/ti/g/{}".format(str(line.reissueGroupTicket(group.id)))
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    ret_ = "‚ïî‚ïê‚ïê[ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ]"
                    ret_ += "\n‚ï† ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° : {}".format(str(group.name))
                    ret_ += "\n‚ï† ‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° : {}".format(group.id)
                    ret_ += "\n‚ï† ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° : {}".format(str(gCreator))
                    ret_ += "\n‚ï† ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å : {}".format(str(len(group.members)))
                    ret_ += "\n‚ï† ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç : {}".format(gPending)
                    ret_ += "\n‚ï† ‡∏•‡∏¥‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° : {}".format(gQr)
                    ret_ += "\n‚ï† ‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°üëâ : {}".format(gTicket)
                    ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    line.sendMessage(to, str(ret_))
                    line.sendImageWithURL(to, path)
                elif text.lower() == '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        ret_ = "‚ïî‚ïê‚ïê[ Member List ]"
                        no = 0 + 1
                        for mem in group.members:
                            ret_ += "\n‚ï† {}. {}".format(str(no), str(mem.displayName))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ]".format(str(len(group.members)))
                        line.sendMessage(to, str(ret_))                		
                elif "‡πÄ‡∏ä‡∏¥‡∏ç‡∏Ñ‡∏•‡∏≠" == msg.text.lower():
                    line.inviteIntoGroupCall(msg.to,[uid.mid for uid in line.getGroup(msg.to).members if uid.mid != line.getProfile().mid])
                    line.sendMessage(msg.to,"‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à(ÔΩÄ„Éªœâ„Éª¬¥)")
                elif ".sh " in msg.text.lower():
                    spl = re.split(".sh ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            line.sendText(msg.to,subprocess.getoutput(spl[1]))
                        except:
                            pass
                elif msg.text.lower() == '‡πÄ‡∏ä‡∏¥‡∏ç‡πÅ‡∏≠‡∏î':
                	if msg.toType == 2:                
                           ginfo = line.getGroup(receiver)
                           try:
                               gcmid = ginfo.creator.mid
                           except:
                               gcmid = "Error"
                           if settings["lang"] == "JP":
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏Å‡∏•‡∏∏‡πà‡∏°")
                           else:
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
                               
                elif msg.text.lower() == "getjoined":
                    line.sendText(msg.to,"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡πÉ‡∏à‡πÄ‡∏¢‡πá‡∏ô‡πÜ")
                    all = line.getGroupIdsJoined()
                    text = ""
                    cnt = 0
                    for i in all:
                        text += line.getGroup(i).name + "\n" + i + "\n\n"
                        cnt += 1
                        if cnt == 10:
                            line.sendText(msg.to,text[:-2])
                            text = ""
                            cnt = 0
                    line.sendText(msg.to,text[:-2])
                    cnt = 0				
                                        
                elif "‡∏£‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° @" in msg.text:
                    print ("[Command]covergroup")
                    _name = msg.text.replace("‡∏£‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° @","")
                    _nametarget = _name.rstrip('  ')
                    gs = line.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        line.sendText(msg.to,"Contact not found")
                    else:
                        for target in targets:
                            try:
                               thisgroup = line.getGroups([msg.to])
                               Mids = [target for contact in thisgroup[0].members]
                               mi_d = Mids[:33]
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.createGroup("RED SAMURAI Group",mi_d)
                               line.sendText(msg.to,"üèÇ‚õ∑Ô∏è[‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÅ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏ö‡∏ü‡πâ‡∏≤]")
                               line.sendText(msg.to,"‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                            except:
                                pass
                    print ("[Command]covergroup]")
                elif "‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @" in msg.text:
                    _name = msg.text.replace("‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @","")
                    _nametarget = _name.rstrip(' ')
                    gs = line.getGroup(msg.to)
                    for g in gs.members:
                        if _nametarget == g.displayName:
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(g.mid,"RED SAMURI") 
                           line.sendText(g.mid,"RED SAMURI")
                           line.sendText(msg.to, "Done")
                           print (" Spammed !")
                elif "‡∏£‡∏±‡∏ô: " in msg.text.lower():
                        key = msg.text[-33:]
                        line.findAndAddContactsByMid(key)                   
                        contact = cl.getContact(key)
                        line.createGroup("YOU SAMURAI Group",[key])
                        line.sendText(msg,to,"‚îå‚à©‚îê(‚ó£_‚ó¢)‚îå‚à©‚îê")
                elif "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏¥‡∏ç " in msg.text.lower():
                    spl = re.split("‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏¥‡∏ç ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        spl[1] = spl[1].strip()
                        ag = line.getGroupIdsInvited()
                        txt = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô "+str(len(ag))+" ‡∏Å‡∏•‡∏∏‡πà‡∏°"
                        if spl[1] != "":
                            txt = txt + " ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° \""+spl[1]+"\""
                        txt = txt + "\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà.."
                        line.sendText(msg.to,txt)
                        procLock = len(ag)
                        for gr in ag:
                            try:
                                line.acceptGroupInvitation(gr)
                                if spl[1] != "":
                                    line.sendText(gr,spl[1])
                                line.leaveGroup(gr)
                            except:
                                pass
                        line.sendText(msg.to,"‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")	
                elif ".whois " in msg.text.lower():
                    spl = re.split(".whois ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        msg.contentType = 13
                        msg.text = None
                        msg.contentMetadata = {"mid":spl[1]}
                        line.sendMessage(msg)
                
                elif "‡∏õ‡∏•‡∏¥‡∏ß" in msg.text.lower():
                    if msg.toType == 2:
                        prov = eval(msg.contentMetadata["MENTION"])["MENTIONEES"]
                        allmid = []
                        for i in range(len(prov)):
                            line.kickoutFromGroup(msg.to,[prov[i]["M"]])
                            allmid.append(prov[i]["M"])
                        line.findAndAddContactsByMids(allmid)
                        line.inviteIntoGroup(msg.to,allmid)
                        line.cancelGroupInvitation(msg.to,allmid)

                elif msg.text.lower() == "mid":
                    line.sendText(msg.to,user1)
                
                elif "name " in msg.text.lower():
                    spl = re.split("name ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        prof = line.getProfile()
                        prof.displayName = spl[1]
                        line.updateProfile(prof)
                        line.sendText(msg.to,"‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
                elif "nmx " in msg.text.lower():
                    spl = re.split(".nmx ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        prof = line.getProfile()
                        prof.displayName = line.nmxstring(spl[1])
                        line.updateProfile(prof)
                        line.sendText(msg.to,"‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î':
                    settings["autoJoinTicket"] = True
                    line.sendMessage(to, "‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏°‡∏∏‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏•‡∏¥‡πâ‡∏á‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡∏°‡∏±‡∏ï")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î':
                    settings["autoJoinTicket"] = False
                    line.sendMessage(to, "‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏°‡∏∏‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏•‡∏¥‡πâ‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï")
                						
                elif msg.text.lower().startswith("sms "):
                    pnum = re.split("sms ",msg.text,flags=re.IGNORECASE)[1]
                    pnum = "66"+pnum[1:]
                    GACReq = GACSender.send(pnum)
                    if GACReq.responseNum == 0:
                        if msg.toType != 0:
                                line.sendText(msg.to,"‡∏™‡πà‡∏á SMS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß (ÔΩÄ„Éªœâ„Éª¬¥)")
                        else:
                                line.sendText(msg.from_,"‡∏™‡πà‡∏á SMS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß (ÔΩÄ„Éªœâ„Éª¬¥)")
                    elif GACReq.responseNum == 1:
                        if msg.toType != 0:
                                line.sendText(msg.to,"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á SMS ‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (ÔΩÄ„Éªœâ„Éª¬¥)\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                        else:
                                line.sendText(msg.from_,"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á SMS ‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (ÔΩÄ„Éªœâ„Éª¬¥)\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                    else:
                        if msg.toType != 0:
                                line.sendText(msg.to,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
                        else:
                                line.sendText(msg.from_,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
                elif msg.text.lower() == ".groupurl":
                    if msg.toType == 2:
                        line.sendText(msg.to,"http://line.me/R/ti/g/"+str(line.reissueGroupTicket(msg.to)))
                    else:
                        line.sendText(msg.to,"‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
                elif ".groupurl " in msg.text.lower():
                    spl = re.split(".groupurl ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            line.sendText(msg.to,"http://line.me/R/ti/g/"+str(line.reissueGroupTicket(spl[1])))
                        except Exception as e:
                            line.sendText(msg.to,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• \""+e.reason+"\")")
                if "gift " in msg.text.lower():
                    red = re.compile(re.escape('gift '),re.IGNORECASE)
                    themeid = red.sub('',msg.text)
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': themeid,
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '1'}
                    msg.text = None
                    line.sendMessage(msg)
#==============================================================================#
                elif text.lower() == '‡πÅ‡∏à‡πä‡∏∞':
                    group = line.getGroup(msg.to)
                    nama = [contact.mid for contact in group.members]
                    k = len(nama)//100
                    for a in range(k+1):
                        txt = ''
                        s=0
                        b=[]
                        for i in group.members[a*100 : (a+1)*100]:
                            b.append({"S":str(s), "E" :str(s+6), "M":i.mid})
                            s += 7
                            txt += '@Alin \n'
                        line.sendMessage(to, text=txt, contentMetadata={'MENTION': json.dumps({'MENTIONEES':b})}, contentType=0)
                        line.sendMessage(to, "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏à‡πä‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {} ‡∏Ñ‡∏ô".format(str(len(nama))))  
                elif text.lower() == '‡∏à‡∏±‡∏ö':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", "‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò", "‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", "‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to in read['readPoint']:
                            try:
                                del read['readPoint'][msg.to]
                                del read['readMember'][msg.to]
                                del read['readTime'][msg.to]
                            except:
                                pass
                            read['readPoint'][msg.to] = msg.id
                            read['readMember'][msg.to] = ""
                            read['readTime'][msg.to] = datetime.now().strftime('%H:%M:%S')
                            read['ROM'][msg.to] = {}
                            with open('read.json', 'w') as fp:
                                json.dump(read, fp, sort_keys=True, indent=4)
                                line.sendMessage(msg.to,"Lurking enabled")
                    else:
                        try:
                            del read['readPoint'][msg.to]
                            del read['readMember'][msg.to]
                            del read['readTime'][msg.to]
                        except:
                            pass
                        read['readPoint'][msg.to] = msg.id
                        read['readMember'][msg.to] = ""
                        read['readTime'][msg.to] = datetime.now().strftime('%H:%M:%S')
                        read['ROM'][msg.to] = {}
                        with open('read.json', 'w') as fp:
                            json.dump(read, fp, sort_keys=True, indent=4)
                            line.sendMessage(msg.to, "Set reading point:\n" + readTime)
                            
                elif text.lower() == '‡πÄ‡∏•‡∏¥‡∏Å‡∏à‡∏±‡∏ö':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to not in read['readPoint']:
                        line.sendMessage(msg.to,"Lurking disabled")
                    else:
                        try:
                            del read['readPoint'][msg.to]
                            del read['readMember'][msg.to]
                            del read['readTime'][msg.to]
                        except:
                              pass
                        line.sendMessage(msg.to, "Delete reading point:\n" + readTime)
    
                elif text.lower() == '‡∏à‡∏±‡∏ö‡πÉ‡∏´‡∏°‡πà':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if msg.to in read["readPoint"]:
                        try:
                            del read["readPoint"][msg.to]
                            del read["readMember"][msg.to]
                            del read["readTime"][msg.to]
                        except:
                            pass
                        line.sendMessage(msg.to, "Reset reading point:\n" + readTime)
                    else:
                        line.sendMessage(msg.to, "Lurking belum diaktifkan ngapain di reset?")
                        
                elif text.lower() == '‡∏≠‡πà‡∏≤‡∏ô':
                    tz = pytz.timezone("Asia/Jakarta")
                    timeNow = datetime.now(tz=tz)
                    day = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday"]
                    hari = ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    hr = timeNow.strftime("%A")
                    bln = timeNow.strftime("%m")
                    for i in range(len(day)):
                        if hr == day[i]: hasil = hari[i]
                    for k in range(0, len(bulan)):
                        if bln == str(k): bln = bulan[k-1]
                    readTime = hasil + ", " + timeNow.strftime('%d') + " - " + bln + " - " + timeNow.strftime('%Y') + "\nJam : [ " + timeNow.strftime('%H:%M:%S') + " ]"
                    if receiver in read['readPoint']:
                        if list(read["ROM"][receiver].items()) == []:
                            line.sendMessage(receiver,"[ Reader ]:\nNone")
                        else:
                            chiya = []
                            for rom in list(read["ROM"][receiver].items()):
                                chiya.append(rom[1])
                            cmem = line.getContacts(chiya) 
                            zx = ""
                            zxc = ""
                            zx2 = []
                            xpesan = '[ *** LurkDetector *** ]:\n'
                        for x in range(len(cmem)):
                            xname = str(cmem[x].displayName)
                            pesan = ''
                            pesan2 = pesan+"@c\n"
                            xlen = str(len(zxc)+len(xpesan))
                            xlen2 = str(len(zxc)+len(pesan2)+len(xpesan)-1)
                            zx = {'S':xlen, 'E':xlen2, 'M':cmem[x].mid}
                            zx2.append(zx)
                            zxc += pesan2
                        text = xpesan+ zxc + "\n[ Lurking time ]: \n" + readTime
                        try:
                            line.sendMessage(receiver, text, contentMetadata={'MENTION':str('{"MENTIONEES":'+json.dumps(zx2).replace(' ','')+'}')}, contentType=0)
                        except Exception as error:
                            print (error)
                        pass
                    else:
                        line.sendMessage(receiver,"Lurking has not been set.")
#==============================================================================#
                elif msg.text.lower().startswith("say-af "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'af'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
        
                elif msg.text.lower().startswith("say-sq "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sq'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ar "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ar'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hy "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hy'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-bn "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'bn'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ca "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ca'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh-cn "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh-cn'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh-tw "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh-tw'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-zh-yue "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'zh-yue'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-cs "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'cs'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-da "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'da'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-nl "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'nl'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en-au "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en-au'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en-uk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en-uk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-en-us "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'en-us'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-eo "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'eo'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-fi "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'fi'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-fr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'fr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-de "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'de'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-el "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'el'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hi "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hi'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-hu "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'hu'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-is "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'is'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-id "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'id'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-it "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'it'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ja "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ja'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-km "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'km'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ko "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ko'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-la "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'la'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-lv "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'lv'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-mk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'mk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-no "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'no'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-pl "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'pl'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-pt "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'pt'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-do "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ro'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ru "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ru'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-si "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'si'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-es "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'es'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-es-es "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'es-es'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-es-us "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'es-us'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sw "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sw'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-sv "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'sv'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-ta "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'ta'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-th "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'th'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-tr "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'tr'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-uk "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'uk'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-vi "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'vi'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
                    
                elif msg.text.lower().startswith("say-cy "):
                    sep = text.split(" ")
                    say = text.replace(sep[0] + " ","")
                    lang = 'cy'
                    tts = gTTS(text=say, lang=lang)
                    tts.save("hasil.mp3")
                    line.sendAudio(msg.to,"hasil.mp3")
#==============================================================================# 
                elif msg.text.lower().startswith("tr-af "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='af')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sq "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sq')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-am "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='am')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ar "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ar')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hy "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hy')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-az "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='az')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-eu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='eu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-be "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='be')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-bn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='bn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-bs "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='bs')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-bg "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='bg')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ca "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ca')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ceb "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ceb')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ny "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ny')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-zh-cn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='zh-cn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-zh-tw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='zh-tw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-co "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='co')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-cs "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='cs')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-da "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='da')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-nl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='nl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-en "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='en')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-et "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='et')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fy "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fy')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-gl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='gl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ka "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ka')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-de "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='de')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-el "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='el')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-gu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='gu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ht "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ht')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ha "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ha')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-haw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='haw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-iw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='iw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hmn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hmn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-hu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='hu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-is "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='is')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ig "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ig')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-id "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='id')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ga "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ga')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-it "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='it')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ja "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ja')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-jw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='jw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-kn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='kn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-kk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='kk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-km "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='km')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ko "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ko')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ku "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ku')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ky "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ky')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lo "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lo')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-la "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='la')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lv "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lv')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lt "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lt')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-lb "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='lb')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mg "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mg')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ms "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ms')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ml "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ml')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mt "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mt')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-mn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='mn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-my "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='my')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ne "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ne')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-no "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='no')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ps "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ps')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fa "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fa')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-pl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='pl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-pt "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='pt')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-pa "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='pa')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ro "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ro')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ru "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ru')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sm "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sm')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-gd "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='gd')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-st "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='st')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sn "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sn')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sd "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sd')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-si "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='si')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sl "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sl')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-so "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='so')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-es "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='es')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-su "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='su')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sw "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sw')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-sv "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='sv')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-tg "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='tg')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ta "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ta')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-te "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='te')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-th "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='th')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-tr "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='tr')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-uk "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='uk')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-ur "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='ur')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-uz "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='uz')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-vi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='vi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-cy "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='cy')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-xh "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='xh')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-yi "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='yi')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-yo "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='yo')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-zu "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='zu')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-fil "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='fil')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
                elif msg.text.lower().startswith("tr-he "):
                    sep = text.split(" ")
                    isi = text.replace(sep[0] + " ","")
                    translator = Translator()
                    hasil = translator.translate(isi, dest='he')
                    A = hasil.text
                    line.sendMessage(msg.to, A)
#sender = msg._from
#            if msg.toType == 0:
#                if sender != line.profile.mid:
#==============================================================================#                 
                elif "‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û " in msg.text.lower():
                    separate = msg.text.split(" ")
                    search = msg.text.replace(separate[0] + " ","")
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("http://rahandiapi.herokuapp.com/imageapi?key=betakey&q={}".format(urllib.parse.quote(search)))
                        data = r.text
                        data = json.loads(data)
                        if data["result"] != []:
                            items = data["result"]
                            path = random.choice(items)
                            a = items.index(path)
                            b = len(items)
                            line.sendImageWithURL(to, str(path))
                elif "‡∏£‡∏π‡∏õ‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô " in msg.text.lower():
                    separate = msg.text.split(" ")
                    search = msg.text.replace(separate[0] + " ","")
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("http://rahandiapi.herokuapp.com/imageapi?key=betakey&q={}".format(urllib.parse.quote(search)))
                        data = r.text
                        data = json.loads(data)
                        if data["result"] != []:
                            items = data["result"]
                            path = random.choice(items)
                            a = items.index(path)
                            b = len(items)
                            line.sendImageWithURL(to, str(path))                               
                elif "‡∏¢‡∏π‡∏ó‡∏π‡∏õ " in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    params = {"search_query": search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.youtube.com/results", params = params)
                        soup = BeautifulSoup(r.content, "html.parser")
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ]"
                        datas = []
                        for data in soup.select(".yt-lockup-title > a[title]"):
                            if "&lists" not in data["href"]:
                                datas.append(data)
                        for data in datas:
                            ret_ += "\n‚ï†‚ïê‚ïê[ {} ]".format(str(data["title"]))
                            ret_ += "\n‚ï† https://www.youtube.com{}".format(str(data["href"]))
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö {} ]".format(len(datas))
                        line.sendMessage(to, str(ret_))
                        
                elif "‡∏Å‡∏π‡πÄ‡∏Å‡∏¥‡πâ‡∏• " in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + " ","")
                    params = {"search_query": search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.google.com/search?q=", params = params)
                        soup = BeautifulSoup(r.content, "html.parser")
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ]"
                        datas = []
                        for data in soup.select(".yt-lockup-title > a[title]"):
                            if "&lists" not in data["href"]:
                                datas.append(data)
                        for data in datas:
                            ret_ += "\n‚ï†‚ïê‚ïê[ {} ]".format(str(data["title"]))
                            ret_ += "\n‚ï† https://www.google.com/search?q={}".format(str(data["href"]))
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö {} ]".format(len(datas))
                        line.sendMessage(to, str(ret_))
                        
                elif "‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ " in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + "‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ ","")
                    params = {"search_query": search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.youtube.com/results", params = params)
                        soup = BeautifulSoup(r.content, "html.parser")
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ]"
                        datas = []
                        for data in soup.select(".yt-lockup-title > a[title]"):
                            if "&lists" not in data["href"]:
                                datas.append(data)
                        for data in datas:
                            ret_ += "\n‚ï†‚ïê‚ïê[ {} ]".format(str(data["title"]))
                            ret_ += "\n‚ï† https://www.youtube.com{}".format(str(data["href"]))
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö {} ]".format(len(datas))
                        line.sendMessage(to, str(ret_))
                        
                elif "‡∏´‡∏ô‡∏±‡∏á " in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + "‡∏´‡∏ô‡∏±‡∏á ","")
                    params = {"search_query": search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.youtube.com/results", params = params)
                        soup = BeautifulSoup(r.content, "html.parser")
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ]"
                        datas = []
                        for data in soup.select(".yt-lockup-title > a[title]"):
                            if "&lists" not in data["href"]:
                                datas.append(data)
                        for data in datas:
                            ret_ += "\n‚ï†‚ïê‚ïê[ {} ]".format(str(data["title"]))
                            ret_ += "\n‚ï† https://www.youtube.com{}".format(str(data["href"]))
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö {} ]".format(len(datas))
                        line.sendMessage(to, str(ret_))
                        
                elif "‡πÄ‡∏û‡∏•‡∏á " in msg.text.lower():
                    sep = text.split(" ")
                    search = text.replace(sep[0] + "‡πÄ‡∏û‡∏•‡∏á ","")
                    params = {"search_query": search}
                    with requests.session() as web:
                        web.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = web.get("https://www.youtube.com/results", params = params)
                        soup = BeautifulSoup(r.content, "html.parser")
                        ret_ = "‚ïî‚ïê‚ïê[ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ]"
                        datas = []
                        for data in soup.select(".yt-lockup-title > a[title]"):
                            if "&lists" not in data["href"]:
                                datas.append(data)
                        for data in datas:
                            ret_ += "\n‚ï†‚ïê‚ïê[ {} ]".format(str(data["title"]))
                            ret_ += "\n‚ï† https://www.youtube.com{}".format(str(data["href"]))
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö {} ]".format(len(datas))
                        line.sendMessage(to, str(ret_))

                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô"]:
                    try:
                        del RfuCctv['point'][msg.to]
                        del RfuCctv['sidermem'][msg.to]
                        del RfuCctv['cyduk'][msg.to]
                    except:
                        pass
                    RfuCctv['point'][msg.to] = msg.id
                    RfuCctv['sidermem'][msg.to] = ""
                    RfuCctv['cyduk'][msg.to]=True
                    line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏™‡∏Å‡∏ô‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏Å‡∏ô"]:
                    if msg.to in RfuCctv['point']:
                        RfuCctv['cyduk'][msg.to]=False
                        line.sendText(msg.to, RfuCctv['sidermem'][msg.to])
                    else:
                        line.sendMessage(msg.to, "‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏™‡∏Å‡∏ô‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")

                elif text.lower() == '‡∏£‡∏µ‡∏ö‡∏≠‡∏ó':
                    line.sendMessage(to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà ... ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ..")
                    line.sendMessage(to, "Success Restarting.")
                    restartBot()
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏•':
                    line.sendMessage(receiver, '‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢')
                    print ("Selfbot Off")
                    exit(1)
                elif text.lower() == "‡∏•‡∏ö‡πÅ‡∏ä‡∏ó":
                        if msg._from in lineMID:
                            try:
                                line.removeAllMessages(op.param2)
                                line.sendMessage(msg.to,"‡∏•‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                            except:
                                pass
                                print ("‡∏•‡∏ö‡πÅ‡∏ä‡∏ó")
                elif text.lower() == '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô':
                    contactlist = line.getAllContactIds()
                    kontak = line.getContacts(contactlist)
                    num=1
                    msgs="üéé‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏îüéé"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.displayName)
                        num=(num+1)
                    msgs+="\nüéé‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏îüéé\n\n‡∏°‡∏µ‡∏î‡∏±‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ : %i" % len(kontak)
                    line.sendMessage(msg.to, msgs)

                elif msg.text in ["‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ"]: 
                    blockedlist = line.getBlockedContactIds()
                    kontak = line.getContacts(blockedlist)
                    num=1
                    msgs="‚ïê‚ïê‚ïê‚ïê‚ïê‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‚ïê‚ïê‚ïê‚ïê‚ïê"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.displayName)
                        num=(num+1)
                    msgs+="\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nTotal Blocked : %i" % len(kontak)
                    line.sendMessage(receiver, msgs)
                elif msg.text in ["sayonara"]:
                    if msg.toType == 2:
                        ginfo = line.getGroup(receiver)
                        try:
                            line.leaveGroup(receiver)
                            ki.leaveGroup(receiver)
                            kk.leaveGroup(receiver)
                            kc.leaveGroup(receiver)
                            ke.leaveGroup(receiver)							
                        except:
                            pass
                elif msg.text in ["‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô"]: 
                    gruplist = line.getAllContactIds()
                    kontak = line.getContacts(gruplist)
                    num=1
                    msgs="‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.mid)
                        num=(num+1)
                    msgs+="\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nTotal Friend : %i" % len(kontak)
                    line.sendMessage(receiver, msgs)

                elif msg.text.lower() == 'gurl':
                	if msg.toType == 2:
                         g = line.getGroup(receiver)
                         line.updateGroup(g)
                         gurl = line.reissueGroupTicket(receiver)
                         line.sendMessage(receiver,"‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì\n‚ï†‚ùÇline://ti/g/" + gurl + "\n‚ï†\n‚ï†‚ùÇLink Groupnya Tanpa Buka Qr\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ")

                elif msg.text == "‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏õ‡πä":
                	line.sendMessage(receiver,">nekopoi.host\n>sexvideobokep.com\n>memek.com\n>pornktube.com\n>faketaxi.com\n>videojorok.com\n>watchmygf.mobi\n>xnxx.com\n>pornhd.com\n>xvideos.com\n>vidz7.com\n>m.xhamster.com\n>xxmovies.pro\n>youporn.com\n>pornhub.com\n>youjizz.com\n>thumzilla.com\n>anyporn.com\n>brazzers.com\n>redtube.com\n>youporn.com")
                elif msg.text == "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®":
                	line.sendMessage(msg.to,str(settings["message1"]))
                elif msg.text.lower() == '‡∏î‡∏∂‡∏á‡πÅ‡∏≠‡∏î':
                	if msg.toType == 2:                
                           ginfo = line.getGroup(receiver)
                           try:
                               gcmid = ginfo.creator.mid
                           except:
                               gcmid = "Error"
                           if settings["lang"] == "JP":
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "Typeüëâ Invite Pembuat Group Succes")
                           else:
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "Pembuat Group Sudah di dalam")

                elif msg.text in ["‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏¥‡∏ç"]:
                    if msg.toType == 2:
                        ginfo = line.getGroup(receiver)
                        try:
                            line.leaveGroup(receiver)							
                        except:
                            pass
                elif msg.text in ["‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡∏î‡∏µ"]: 
                    gruplist = line.getAllContactIds()
                    kontak = line.getContacts(gruplist)
                    num=1
                    msgs="‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.mid)
                        num=(num+1)
                    msgs+="\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô  %i" % len(kontak)
                    line.sendMessage(receiver, msgs)
                    
                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏à‡πá‡∏ö"]:
                    settings["kickMention"] = True
                    line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡πá‡∏Å")
                
                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏à‡πá‡∏ö"]:
                    settings["kickMention"] = False
                    line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡πá‡∏Å")
                    
                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ","Tag on"]:
                        settings['detectMention'] = True
                        line.sendMessage(msg.to,"Respon enabled.")
                
                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ","Tag off"]:
                        settings['detectMention'] = False
                        line.sendMessage(msg.to,"Respon disabled.")

                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2"]:
                    settings["potoMention"] = True
                    line.sendMessage(msg.to,"AutoRespon enabled.")
                
                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2"]:
                    settings["potoMention"] = False
                    line.sendMessage(msg.to,"Autorespon disabled.")
                    
                elif '‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏î: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏î: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                         settings["message"] = spl
                         line.sendMessage(msg.to, "‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£\nüëá‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡πÇ‡∏ï‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏≠‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl)))
                         
                elif '‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                         settings["comment"] = spl
                         line.sendMessage(msg.to, "‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£\nüëá‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl))) 
                    
                elif '‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ó‡∏Ñ: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ó‡∏Ñ: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                         settings["Respontag"] = spl
                         line.sendMessage(msg.to, "‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£\nüëá‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡πÇ‡∏ï‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡πÅ‡∏•‡πâ‡∏ßüëá\n\nüëâ{}".format(str(spl)))
                         
                elif '‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏ô‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                          settings["kick"] = spl
                          line.sendMessage(msg.to, "‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£\n‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß\n‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl)))

                elif '‡∏ó‡∏±‡∏Å‡∏≠‡∏≠‡∏Å: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏ó‡∏±‡∏Å‡∏≠‡∏≠‡∏Å: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                     else:
                          settings["bye"] = spl
                          line.sendMessage(msg.to, "‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£\n‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß\n‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl)))

                elif '‡∏ó‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤: ' in msg.text:
                  if msg._from in admin:
                     spl = msg.text.replace('‡∏ó‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤: ','')
                     if spl in [""," ","\n",None]:
                         line.sendMessage(msg.to, "‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                     else:
                          settings["welcome"] = spl
                          line.sendMessage(msg.to, "‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£\n‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß\n‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâüëá\n\nüëâ{}".format(str(spl)))

                elif msg.text.lower().startswith("textig "):
                    sep = msg.text.split(" ")
                    textnya = msg.text.replace(sep[0] + " ","")
                    urlnya = "http://chart.apis.google.com/chart?chs=480x80&cht=p3&chtt=" + textnya + "&chts=FFFFFF,70&chf=bg,s,000000"
                    line.sendImageWithURL(msg.to, urlnya)

                elif "kedip " in msg.text:
                    txt = msg.text.replace("kedip ", "")
                    t1 = "\xf4\x80\xb0\x82\xf4\x80\xb0\x82\xf4\x80\xb0\x82\xf4\x80\xb0\x82\xf4\x80\xa0\x81\xf4\x80\xa0\x81\xf4\x80\xa0\x81"
                    t2 = "\xf4\x80\x82\xb3\xf4\x8f\xbf\xbf"
                    line.sendMessage(msg.to, t1 + txt + t2)						
                elif msg.text in ["‡∏î‡∏∂‡∏á"]:
                        settings["winvite"] = True
                        line.sendMessage(msg.to,"send a contact to invite user")                            
                elif msg.text.lower() == "‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            line.cancelGroupInvitation(msg.to,[i])
                elif msg.text.lower() == "‡∏ö‡∏≠‡∏ó‡∏¢‡∏Å":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            random.choice(Exc).cancelGroupInvitation(msg.to,[i])
#=============COMMAND KICKER===========================#
                elif msg.text in ["‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥"]:
                    settings["blacklist"] = {}
                    line.sendMessage(msg.to,"‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                    print ("Clear Ban")
                elif text.lower() == '‡∏°‡∏≤':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        group.preventedJoinByTicket = False
                        line.updateGroup(group)
                        invsend = 0
                        ticket = line.reissueGroupTicket(to)
                        ki.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        kk.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        kc.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)
                        ke.acceptGroupInvitationByTicket(to,format(str(ticket)))
                        time.sleep(0.01)                        
                        group.preventedJoinByTicket = True
                        line.updateGroup(group)
                        print ("‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤ ")
                elif '‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               random.choice(Rfu).kickoutFromGroup(msg.to,[target])      
                               print ("Rfu kick User")
                           except:
                               random.choice(Rfu).sendMessage(msg.to,"Limit kaka üò´")

                elif '‡∏™‡∏≠‡∏¢' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               line.kickoutFromGroup(msg.to,[target])             
                               print ("Sb Kick User")
                           except:
                               line.sendMessage(msg.to,"Limit kaka üò´")                               

                elif '1‡∏•‡∏∏‡∏¢ ' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               ki.kickoutFromGroup(msg.to,[target])           
                               print ("‡∏Ñ‡∏¥‡∏Å1‡πÄ‡∏ï‡∏∞")
                           except:
                               ki.sendMessage(msg.to,"‡∏à‡∏≥‡∏Å‡∏±‡∏î")                               

                elif '2‡∏•‡∏∏‡∏¢ ' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               kk.kickoutFromGroup(msg.to,[target])
                               print ("‡∏Ñ‡∏¥‡∏Å2‡πÄ‡∏ï‡∏∞")
                           except:
                               kk.sendMessage(msg.to,"‡∏à‡∏≥‡∏Å‡∏±‡∏î")                              

                elif '3‡∏•‡∏∏‡∏¢ ' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               kc.kickoutFromGroup(msg.to,[target])
                               print ("‡∏Ñ‡∏¥‡∏Å3‡πÄ‡∏ï‡∏∞")
                           except:
                               kc.sendMessage(msg.to,"‡∏à‡∏≥‡∏Å‡∏±‡∏î")

                
                elif "‡πÑ‡∏õ " in msg.text:
                    Ri0 = text.replace("‡πÑ‡∏õ ","")
                    Ri1 = Ri0.rstrip()
                    Ri2 = Ri1.replace("@","")
                    Ri3 = Ri2.rstrip()
                    _name = Ri3
                    gs = line.getGroup(msg.to)
                    targets = []
                    for s in gs.members:
                        if _name in s.displayName:
                            targets.append(s.mid)
                    if targets == []:
                        pass
                    else:
                        for target in targets:
                            if target in admin:
                                pass
                            else:
                                try:
                                    line.kickoutFromGroup(to,[target])
                                    line.findAndAddContactsByMid(target)
                                    line.inviteIntoGroup(to,[target])
                                except:
                                    pass
                
                elif '‡πÄ‡∏ä‡∏¥‡∏ç' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               line.inviteIntoGroup(msg.to,[target])
                               line.sendMessage(receiver, "‡πÄ‡∏ä‡∏¥‡∏çok")
                           except:
                               line.sendMessage(msg.to,"‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç")

                elif "‡∏õ‡∏ß‡∏î‡∏ï‡∏±‡∏ö" == msg.text:
		           if msg.from_ in Creator:
                     if msg.toType == 2:
                        print "Kick all member"
                        _name = msg.text.replace("‡∏õ‡∏ß‡∏î‡∏ï‡∏±‡∏ö","")
                        gs = ki.getGroup(msg.to)
                        gs = kk.getGroup(msg.to)
                        gs = kc.getGroup(msg.to)
                        ki.sendText(msg.to,"Sampai jumpaa~")
                        kc.sendText(msg.to,"Dadaaah~")
                        targets = []
                        for g in gs.members:
                            if _name in g.displayName:
                                targets.append(g.mid)
                        if targets == []:
                            ki.sendText(msg.to,"Not found.")
                        else:
                            for target in targets:
				if target not in admin:
                                    try:
                                        klist=[ki,kk,kc]
                                        kicker=random.choice(klist)
                                        kicker.kickoutFromGroup(msg.to,[target])
                                        print (msg.to,[g.mid])
                                    except Exception as e:
                                        cl.sendText(msg.to,str(e))
			    cl.inviteIntoGroup(msg.to, targets)
                
                elif msg.text in ["‡πÑ‡∏•‡πà‡∏î‡∏≥"]:
                	if msg.toType == 2:
                         group = line.getGroup(receiver)
                         gMembMids = [contact.mid for contact in group.members]
                         matched_list = []
                         for tag in settings["blacklist"]:
                             matched_list+=[str for str in gMembMids if str == tag]
                         if matched_list == []:
                             line.sendMessage(receiver,"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥")
                         else:
                             for jj in matched_list:
                                 try:
                                     klist=[line,ki,kk,kc,ke]
                                     kicker=random.choice(klist)
                                     kicker.kickoutFromGroup(receiver,[jj])
                                     print((receiver,[jj]))
                                 except:
                                     line.sendMessage(receiver,"‡πÄ‡∏ï‡∏∞‡∏Å‡∏∏‡πÄ‡∏ï‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡∏±‡∏Å‡∏´‡∏≥")
                                     print ("‡πÑ‡∏•‡πà‡πÄ‡∏ï‡∏∞‡∏î‡∏≥")
                elif text.lower() == "‡∏•‡∏ö‡πÅ‡∏ä‡∏ó":
                        if msg._from in lineMID:
                            try:
                                line.removeAllMessages(op.param2)
                                line.sendMessage(msg.to,"‡∏•‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                            except:
                                pass
                                print ("‡∏•‡∏ö‡πÅ‡∏ä‡∏ó‡πÄ‡∏ã‡∏•")
                elif text.lower() == "‡∏•‡∏ö‡πÅ‡∏ä‡∏ó‡∏Ñ‡∏¥‡∏Å":
                        if msg._from in Family:
                            try:
                                ki.removeAllMessages(op.param2)
                                kk.removeAllMessages(op.param2)
                                kc.removeAllMessages(op.param2)
                                ke.removeAllMessages(op.param2)                                
                                ki.sendMessage(msg.to,"‡∏•‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                                ke.sendMessage(msg.to,"‡∏•‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                                kk.sendMessage(msg.to,"‡∏•‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                                kc.sendMessage(msg.to,"‡∏•‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                            except:
                                pass
                                print ("‡∏•‡∏ö‡πÅ‡∏ä‡∏ó‡∏Ñ‡∏¥‡∏Å")

                elif text.lower() == '‡∏Ñ‡∏¥‡∏Å‡∏™‡∏õ‡∏µ‡∏î':
                    start = time.time()
                    ki.sendMessage(to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
                    elapsed_time = time.time() - start
                    ki.sendMessage(msg.to, "[ %s Seconds ] [ " % (elapsed_time) + str(int(round((time.time() - start) * 1000)))+" ms ]")
                    elapsed_time = time.time() - start
                    kk.sendMessage(msg.to, "[ %s Seconds ] [ " % (elapsed_time) + str(int(round((time.time() - start) * 1000)))+" ms ]")
                    elapsed_time = time.time() - start
                    kc.sendMessage(msg.to, "[ %s Seconds ] [ " % (elapsed_time) + str(int(round((time.time() - start) * 1000)))+" ms ]")
                    elapsed_time = time.time() - start
                    ke.sendMessage(msg.to, "[ %s Seconds ] [ " % (elapsed_time) + str(int(round((time.time() - start) * 1000)))+" ms ]")
                    elapsed_time = time.time() - start

                elif text.lower() == "‡∏≠‡∏≠‡∏Å":
                    if msg._from in Family:
                        ki.leaveGroup(msg.to)
                        kk.leaveGroup(msg.to)
                        kc.leaveGroup(msg.to)
                        ke.leaveGroup(msg.to)                        
                        print ("Kicker Leave")

                elif text.lower() == "‡∏≠‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°":
                    if msg._from in Family:
                        gid = line.getGroupIdsJoined()
                        for i in gid:
                            ki.leaveGroup(i)
                            kk.leaveGroup(i)
                            kc.leaveGroup(i)
                            ke.leaveGroup(i)                            
                            print ("‡∏Ñ‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°")
                elif "‡∏ä‡∏∑‡πà‡∏≠: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(":")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = line.getProfile()
                        profile_A.displayName = string
                        line.updateProfile(profile_A)
                        line.sendMessage(msg.to,"Update to " + string)
                        print ("Update Name")

                elif text.lower() == "‡πÑ‡∏ß‡∏£‡∏±‡∏™":
                    line.sendContact(to, "u1f41296217e740650e0448b96851a3e2',")
                elif "‡∏ï‡∏±‡∏™: " in msg.text.lower():
                    if msg._from in Family:
                        proses = text.split(":")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = line.getProfile()
                        profile_A.statusMessage = string
                        line.updateProfile(profile_A)
                        line.sendMessage(msg.to,"Succes Update üëâ " + string)
                        print ("Update Bio Succes")               
                elif text.lower() == "‡∏Ñ‡∏¥‡∏Å":
                    if msg._from in Family:
                        profile = ki.getProfile()
                        text = profile.displayName + " ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏Ñ‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô‡∏¢‡∏π"
                        ki.sendMessage(to, text)                                
                        profile = kk.getProfile()
                        text = profile.displayName + " ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏Ñ‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô‡∏¢‡∏π"
                        kk.sendMessage(to, text)                                
                        profile = kc.getProfile()
                        text = profile.displayName + " ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏Ñ‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô‡∏¢‡∏π"
                        kc.sendMessage(to, text)
                        profile = ke.getProfile()                        
                        text = profile.displayName + " ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏Ñ‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô‡∏¢‡∏π"
                        ke.sendMessage(to, text)                        
                        print ("‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏Å")
                elif msg.text.lower().startswith("bitcoin"):
                   search = msg.text.split("bitcoin")
                   with requests.session() as web:
                       web.headers["User-Agent"] = random.choice(settings["userAgent"])
                       url = "https://xeonwz.herokuapp.com/bitcoin.api"
                       r = web.get(url)
                       data=r.text
                       data=json.loads(data)
                       print(data)
                       hasil = "„Äå Bitcoin Result „Äç"
                       hasil += "\nPrice : " +str(data["btc"])                                
                       hasil += "\nExpensive : " +str(data["high"])
                       hasil += "\nCheap : " +str(data["low"])               
                       line.sendMessage(to, str(hasil))
#=============COMMAND PROTECT=========================#
                elif msg.text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô':
                    if RfuProtect["protect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                    else:
                        RfuProtect["protect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô':
                    if RfuProtect["protect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                    else:
                        RfuProtect["protect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô   ")

                elif msg.text.lower() == '‡∏Å‡∏±‡∏ô‡∏¢‡∏Å':
                    if RfuProtect["cancelprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["cancelprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å':
                    if RfuProtect["cancelprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["cancelprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == '‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç':
                    if RfuProtect["inviteprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["inviteprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç':
                    if RfuProtect["inviteprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                    else:
                        RfuProtect["inviteprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç   ")

                elif msg.text.lower() == '‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á':
                    if RfuProtect["linkprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                    else:
                        RfuProtect["linkprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á':
                    if RfuProtect["linkprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                    else:
                        RfuProtect["linkprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á   ")

                elif msg.text.lower() == '‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    if RfuProtect["Protectguest"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                    else:
                        RfuProtect["Protectguest"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    if RfuProtect["Protectguest"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                    else:
                        RfuProtect["Protectguest"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å   ")

                elif msg.text.lower() == '‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤':
                    if RfuProtect["Protectjoin"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                    else:
                        RfuProtect["Protectjoin"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤':
                    if RfuProtect["Protectjoin"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                    else:
                        RfuProtect["Protectjoin"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤   ")

                elif msg.text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î':
                    if RfuProtect["inviteprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‚ú∞‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                        else:
                            line.sendMessage(msg.to,"‚ú∞‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                    else:
                        RfuProtect["inviteprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["cancelprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    else:
                        RfuProtect["cancelprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["protect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    else:
                        RfuProtect["protect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                    if RfuProtect["linkprotect"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                    else:
                        RfuProtect["linkprotect"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á")
                    if RfuProtect["Protectguest"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectguest"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    if RfuProtect["Protectjoin"] == True:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectjoin"] = True
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")

                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î':
                    if RfuProtect["inviteprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‚ú∞‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                        else:
                            line.sendMessage(msg.to,"‚ú∞‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ú∞")
                    else:
                        RfuProtect["inviteprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["cancelprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    else:
                        RfuProtect["cancelprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç")
                    if RfuProtect["protect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                    else:
                        RfuProtect["protect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ï‡∏∞")
                    if RfuProtect["linkprotect"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                    else:
                        RfuProtect["linkprotect"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á")
                    if RfuProtect["Protectguest"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectguest"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    if RfuProtect["Protectjoin"] == False:
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                    else:
                        RfuProtect["Protectjoin"] = False
                        if settings["lang"] == "JP":
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")
                        else:
                            line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°")

#==============FINNISHING PROTECT========================#
                elif msg.text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏Ç‡∏Å':
                        if settings["Wc"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                        else:
                            settings["Wc"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏Ç‡∏Å':
                        if settings["Wc"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                        else:
                            settings["Wc"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                                
                elif msg.text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞':
                        if settings["Nk"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°...")
                        else:
                            settings["Nk"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°...")
                                
                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡∏Å‡πÄ‡∏ï‡∏∞':
                        if settings["Nk"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß..")
                        else:
                            settings["Nk"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß...")

                elif msg.text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡πà‡∏á‡πÅ‡∏Ç‡∏Å':
                        if settings["Lv"] == True:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≥‡∏•‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                        else:
                            settings["Lv"] = True
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≥‡∏•‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                elif msg.text.lower() == '‡∏õ‡∏¥‡∏î‡∏™‡πà‡∏á‡πÅ‡∏Ç‡∏Å':
                        if settings["Lv"] == False:
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≥‡∏•‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")
                        else:
                            settings["Lv"] = False
                            if settings["lang"] == "JP":
                                line.sendMessage(to,"‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≥‡∏•‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°   ")

                elif msg.text.lower().startswith("‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°: "):
                    wban = text.split()[1:]
                    wban = " ".join(wban)
                    wbanlist.append(wban)
                    line.sendMessage(to,"%s ‡∏û‡∏¥‡∏°‡∏Ñ‡∏≥‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏õ‡∏•‡∏¥‡∏ß‡∏ô‡∏∞."%wban)
                elif msg.text.lower().startswith("‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°:"):
                    wunban = text.split()[1:]
                    wunban = " ".join(wunban)
                    if wunban in wbanlist:
                        wbanlist.remove(wunban)
                        line.sendMessage(to,"%s ‡∏•‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°‡πÅ‡∏•‡πâ‡∏ß."%wunban)
                    else:
                        line.sendMessage(to,"%s is not blacklisted."%wunban)
                elif msg.text in ["‡πÄ‡∏ä‡∏Ñ‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°"]:
                    tst = "‡∏Ñ‡∏≥‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°:\n"
                    if len(wbanlist) > 0:
                        for word in wbanlist:
                            tst += "- %s"%word
                        line.sendMessage(msg.to,tst)
                    else:
                        line.sendMessage(msg.to,"‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")   
                        
                elif text.lower() == '‡∏•‡∏ö‡∏£‡∏±‡∏ô':
                    gid = line.getGroupIdsInvited()
                    start = time.time()
                    for i in gid:
                        line.rejectGroupInvitation(i)
                    elapsed_time = time.time() - start
                    line.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    line.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    
                elif text.lower() == '‡∏•‡∏ö‡∏£‡∏±‡∏ô‡∏Ñ‡∏¥‡∏Å':
                    gid = line.getGroupIdsInvited()
                    start = time.time()
                    for i in gid:
                        ki.rejectGroupInvitation(i)
                        ke.rejectGroupInvitation(i)
                        kc.rejectGroupInvitation(i)
                        kk.rejectGroupInvitation(i)
                    elapsed_time = time.time() - start
                    ki.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ki.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    ke.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    ke.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    kc.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    kc.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    kk.sendMessage(to, "‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡∏£‡∏±‡∏ö")
                    kk.sendMessage(to, "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (elapsed_time))
                    
                elif "‡∏•‡∏á‡∏î‡∏≥" in msg.text:
                  if msg._from in Family:
                      if msg.toType == 2:
                           print ("All Banlist")
                           _name = msg.text.replace("‡∏•‡∏á‡∏î‡∏≥","")
                           gs = line.getGroup(msg.to)
                           line.sendMessage(msg.to,"‡πÅ‡∏ö‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ßÔººÔºà‚óãÔºæœâÔºæ‚óãÔºâÔºè")
                           targets = []
                           for g in gs.members:
                               if _name in g.displayName:
                                    targets.append(g.mid)
                           if targets == []:
                                line.sendMessage(msg.to,"Maaf")
                           else:
                               for target in targets:
                                   if not target in Family:
                                       try:
                                           settings["blacklist"][target] = True
                                           f=codecs.open('st2__b.json','w','utf-8')
                                           json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                       except:
                                           line.sentMessage(msg.to,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏")
										   
                elif '‡πÅ‡∏ö‡∏ô' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               settings["blacklist"][target] = True
                               f=codecs.open('st2__b.json','w','utf-8')
                               json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                               line.sendMessage(msg.to,"Succes added for the blacklist ")
                               print ("Banned User")
                           except:
                               line.sendMessage(msg.to,"Contact Not Found")

                elif '‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               del settings["blacklist"][target]
                               f=codecs.open('st2__b.json','w','utf-8')
                               json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                               line.sendMessage(msg.to,"Succes unban from the blacklist. ")
                               print ("Unbanned User")
                           except:
                               line.sendMessage(msg.to,"Contact Not Found")
                
                elif msg.text in ["‡πÄ‡∏ä‡πá‡∏Ñ‡∏î‡∏≥"]:
                  if msg._from in Family:
                    if settings["blacklist"] == {}:
                        line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏û‡∏ö") 
                    else:
                        line.sendMessage(msg.to,"‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏î‡∏≥")
                        mc = "Blacklist User\n"
                        for mi_d in settings["blacklist"]:
                            mc += "[‚àö] " + line.getContact(mi_d).displayName + " \n"
                        line.sendMessage(msg.to, mc + "")

                elif msg.text.lower().startswith("urban "):
                    sep = msg.text.split(" ")
                    judul = msg.text.replace(sep[0] + " ","")
                    url = "http://api.urbandictionary.com/v0/define?term="+str(judul)
                    with requests.session() as s:
                        s.headers["User-Agent"] = random.choice(settings["userAgent"])
                        r = s.get(url)
                        data = r.text
                        data = json.loads(data)
                        y = "[ Result Urban ]"
                        y += "\nTags: "+ data["tags"][0]
                        y += ","+ data["tags"][1]
                        y += ","+ data["tags"][2]
                        y += ","+ data["tags"][3]
                        y += ","+ data["tags"][4]
                        y += ","+ data["tags"][5]
                        y += ","+ data["tags"][6]
                        y += ","+ data["tags"][7]
                        y += "\n[1]\nAuthor: "+str(data["list"][0]["author"])
                        y += "\nWord: "+str(data["list"][0]["word"])
                        y += "\nLink: "+str(data["list"][0]["permalink"])
                        y += "\nDefinition: "+str(data["list"][0]["definition"])
                        y += "\nExample: "+str(data["list"][0]["example"])
                        line.sendMessage(to, str(y))
            elif msg.contentType == 1:
                if settings["changePictureProfile"] == True:
                    path = line.downloadObjectMsg(msg_id)
                    settings["changePictureProfile"] = False
                    line.updateProfilePicture(path)
                    line.sendMessage(to, "Berhasil mengubah foto profile")
                if msg.toType == 2:
                    if to in settings["changeGroupPicture"]:
                        path = line.downloadObjectMsg(msg_id)
                        settings["changeGroupPicture"].remove(to)
                        line.updateGroupPicture(to, path)
                        line.sendMessage(to, "Berhasil mengubah foto group")
            elif msg.contentType == 7:
                if settings["checkSticker"] == True:
                    stk_id = msg.contentMetadata['STKID']
                    stk_ver = msg.contentMetadata['STKVER']
                    pkg_id = msg.contentMetadata['STKPKGID']
                    ret_ = "‚ïî‚ïê‚ïê[ Sticker Info ]"
                    ret_ += "\n‚ï† STICKER ID : {}".format(stk_id)
                    ret_ += "\n‚ï† STICKER PACKAGES ID : {}".format(pkg_id)
                    ret_ += "\n‚ï† STICKER VERSION : {}".format(stk_ver)
                    ret_ += "\n‚ï† STICKER URL : line://shop/detail/{}".format(pkg_id)
                    ret_ += "\n‚ïö‚ïê‚ïê[ Finish ]"
                    line.sendMessage(to, str(ret_))
              
#==============================================================================#
        if op.type == 19:
            if lineMID in op.param3:
                settings["blacklist"][op.param2] = True
        if op.type == 22:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)              
        if op.type == 24:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)             
#==============================================================================#
        if op.type == 19:
            print ("[ 19 ] ‡∏ö‡∏≠‡∏ó‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏¥‡∏Å")
            try:
                if op.param3 in lineMID:
                    if op.param2 in kiMID:
                        G = ki.getGroup(op.param1)
#                        ginfo = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki.updateGroup(G)
                        invsend = 0
                        Ticket = ki.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        ki.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        ki.updateGroup(G)
                    else:
                        G = ki.getGroup(op.param1)
#                        ginfo = ais.getGroup(op.param1)
                        ki.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki.updateGroup(G)
                        invsend = 0
                        Ticket = ki.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        ki.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        ki.updateGroup(G)
                        settings["blacklist"][op.param2] = True
#------- ban-nadya ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kiMID:
                    if op.param2 in lineMID:
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                    else:
                        G = line.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        line.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                        settings["blacklist"][op.param2] = True              
#------- nadya - can ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in lineMID:
                    if op.param2 in kkMID:
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        kk.updateGroup(G)
                        invsend = 0
                        Ticket = kk.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kk.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kk.updateGroup(G)
                    else:
                        G = kk.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        kk.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        kk.updateGroup(G)
                        invsend = 0
                        Ticket = kk.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kk.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kk.updateGroup(G)
                        settings["blacklist"][op.param2] = True                                    
#------- can - ban ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kkMID:
                    if op.param2 in kiMID:
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki.updateGroup(G)
                        invsend = 0
                        Ticket = ki.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        ki.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        ki.updateGroup(G)
                    else:
                        G = ki.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        ki.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki.updateGroup(G)
                        invsend = 0
                        Ticket = ki.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        ki.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        ki.updateGroup(G)
                        settings["blacklist"][op.param2] = True      
 #------- can - nadya ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kkMID:
                    if op.param2 in lineMID:
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                    else:
                        G = line.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        line.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                        settings["blacklist"][op.param2] = True                                                  
#------- ban - can ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kiMID:
                    if op.param2 in kkMID:
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        kk.updateGroup(G)
                        invsend = 0
                        Ticket = kk.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kk.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kk.updateGroup(G)
                    else:
                        G = kk.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        kk.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = kk.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kk.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kk.updateGroup(G)
                        settings["blacklist"][op.param2] = True                                                                        
                elif op.param3 in lineMID:
                    if op.param2 in kcMID:
                        G = kc.getGroup(op.param1)
#                        ginfo = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        kc.updateGroup(G)
                        invsend = 0
                        Ticket = kc.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kc.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kc.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kc.updateGroup(G)
                    else:
                        G = kc.getGroup(op.param1)
#                        ginfo = ais.getGroup(op.param1)
                        kc.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        kc.updateGroup(G)
                        invsend = 0
                        Ticket = kc.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kc.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kc.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kc.updateGroup(G)
                        settings["blacklist"][op.param2] = True
#------- ban-nadya ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kcMID:
                    if op.param2 in lineMID:
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                    else:
                        G = line.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        line.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        line.updateGroup(G)
                        invsend = 0
                        Ticket = line.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        line.updateGroup(G)
                        settings["blacklist"][op.param2] = True              
#------- nadya - can ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kcMID:
                    if op.param2 in kkMID:
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        kk.updateGroup(G)
                        invsend = 0
                        Ticket = kk.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kk.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kk.updateGroup(G)
                    else:
                        G = kk.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        kk.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        kk.updateGroup(G)
                        invsend = 0
                        Ticket = kk.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kk.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kk.updateGroup(G)
                        settings["blacklist"][op.param2] = True                                    
#------- can - ban ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kkMID:
                    if op.param2 in kcMID:
                        G = kc.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        kc.updateGroup(G)
                        invsend = 0
                        Ticket = kc.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kc.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kc.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kc.updateGroup(G)
                    else:
                        G = kc.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        kc.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        kc.updateGroup(G)
                        invsend = 0
                        Ticket = kc.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kc.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kc.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kc.updateGroup(G)
                        settings["blacklist"][op.param2] = True      
 #------- can - nadya ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kcMID:
                    if op.param2 in kiMID:
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        ki.updateGroup(G)
                        invsend = 0
                        Ticket = ki.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        ki.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        ki.updateGroup(G)
                    else:
                        G = ki.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        ki.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        ki.updateGroup(G)
                        invsend = 0
                        Ticket = ki.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = ki.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        ki.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        ki.updateGroup(G)
                        settings["blacklist"][op.param2] = True                                                  
  #------- ban - can ----------------------------------------------------------------------[kiMID ki2MID]
                elif op.param3 in kiMID:
                    if op.param2 in kcMID:
                        G = kc.getGroup(op.param1)
                        G.preventedJoinByTicket = False
                        kc.updateGroup(G)
                        invsend = 0
                        Ticket = kc.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kc.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kc.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kc.updateGroup(G)
                    else:
                        G = kc.getGroup(op.param1)
#                        ginfo = gye.getGroup(op.param1)
                        kc.kickoutFromGroup(op.param1,[op.param2])
                        G.preventedJoinByTicket = False
                        kc.updateGroup(G)
                        invsend = 0
                        Ticket = kc.reissueGroupTicket(op.param1)
                        line.acceptGroupInvitationByTicket(op.param1,Ticket)
                        ki.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kk.acceptGroupInvitationByTicket(op.param1,Ticket)
                        kc.acceptGroupInvitationByTicket(op.param1,Ticket)
                        G = kk.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        kc.updateGroup(G)
                        G.preventedJoinByTicket(G)
                        kc.updateGroup(G)
                        settings["blacklist"][op.param2] = True      
                        
#==============================================================================#
        if op.type == 17:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
            if RfuProtect["protect"] == True:
                if settings["blacklist"][op.param2] == True:
                    try:
                        line.kickoutFromGroup(op.param1,[op.param2])
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                    except:
                        try:
                            line.kickoutFromGroup(op.param1,[op.param2])
                            G = line.getGroup(op.param1)
                            G.preventedJoinByTicket = True
                            line.updateGroup(G)
                        except:
                            pass
        if op.type == 19:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["protect"] == True:
                    settings ["blacklist"][op.param2] = True
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                    random.choice(Rfu).inviteIntoGroup(op.param1,[op.param2])

        if op.type == 13:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["inviteprotect"] == True:
                    settings ["blacklist"][op.param2] = True
                    random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                    if op.param2 not in Family:
                        if op.param2 in Family:
                            pass
                        elif RfuProtect["inviteprotect"] == True:
                            settings ["blacklist"][op.param2] = True
                            random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                            random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                            if op.param2 not in Family:
                                if op.param2 in Family:
                                    pass
                                elif RfuProtect["cancelprotect"] == True:
                                    settings ["blacklist"][op.param2] = True
                                    random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])

        if op.type == 11:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["linkprotect"] == True:
                    settings ["blacklist"][op.param2] = True
                    G = line.getGroup(op.param1)
                    G.preventedJoinByTicket = True
                    line.updateGroup(G)
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
        if op.type == 5:
            if RfuProtect["autoAdd"] == True:
                if (settings["message"] in [""," ","\n",None]):
                    pass
                else:
                    line.sendMessage(op.param1,str(settings["message"]))                    

        if op.type == 11:
            if RfuProtect["linkprotect"] == True:
                if op.param2 not in Family:
                    G = line.getGroup(op.param1)
                    G.preventedJoinByTicket = True
                    random.choice(Rfu).updateGroup(G)
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param3])                    

        if op.type == 13:
           if RfuProtect["Protectguest"] == True:
               if op.param2 not in Family:
                  random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])

        if op.type == 17:
           if RfuProtect["Protectjoin"] == True:
               if op.param2 not in Family:
                   random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])

        if op.type == 1:
            if sender in Setmain["foto"]:
                path = line.downloadObjectMsg(msg_id)
                del Setmain["foto"][sender]
                line.updateProfilePicture(path)
                line.sendMessage(to,"Foto berhasil dirubah")
        
        if op.type == 26:
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0:
                if sender != line.profile.mid:
                    to = sender
                else:
                    to = receiver
            else:
                to = receiver
                if settings["autoRead"] == True:
                    line.sendChatChecked(to, msg_id)				
                if to in read["readPoint"]:
                    if sender not in read["ROM"][to]:
                        read["ROM"][to][sender] = True
                if sender in settings["mimic"]["target"] and settings["mimic"]["status"] == True and settings["mimic"]["target"][sender] == True:
                    text = msg.text
                    if text is not None:
                        line.sendMessage(msg.to,text)
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in msg.contentMetadata.keys() != None:
        	             if settings['kickMention'] == True:
        		             contact = line.getContact(msg._from)
        		             cName = contact.displayName
        		             balas = ["‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ú‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡πÑ‡∏ß‡πâ " + "\nüëâ" + cName + "\nüôè‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏£‡∏¥‡∏á‡πÜüôèBye!!!"]
        		             ret_ = "" + random.choice(balas)                     
        		             name = re.findall(r'@(\w+)', msg.text)
        		             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
        		             mentionees = mention["MENTIONEES"]
        		             for mention in mentionees:
        			               if mention['M'] in admin:
        				                  line.sendText(msg.to,ret_)
        				                  random.choice(Rfu).kickoutFromGroup(msg.to,[msg._from])
        				                  break                                  
        			               if mention['M'] in lineMID:
        				                  line.sendText(msg.to,ret_)
        				                  random.choice(Rfu).kickoutFromGroup(msg.to,[msg._from])
        				                  break
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys())!= None:
                         if settings['potoMention'] == True:
                             contact = line.getContact(msg._from)
                             cName = contact.pictureStatus
                             mi_d = contact.mid
                             balas = ["http://dl.profile.line-cdn.net/" + cName]
                             ret_ = random.choice(balas)
                             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                             mentionees = mention["MENTIONEES"]
                             for mention in mentionees:
                                   if mention["M"] in lineMID:
                                          line.sendImageWithURL(to,ret_)
                                          line.sendContact(msg.to, mi_d)
                                          break  
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys()) != None:
                         if settings['detectMention'] == True:
                             contact = line.getContact(msg._from)
                             cName = contact.displayName
                             balas = ["„Äé Auto Respon„Äè\n " + cName + "\n\n„Äé‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏≥‡πÑ‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?„Äè"]
                             ret_ = "" + random.choice(balas)
                             name = re.findall(r'@(\w+)', msg.text)
                             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                             mentionees = mention['MENTIONEES']
                             for mention in mentionees:
                                   if mention['M'] in lineMID:
                                          line.sendMessage(to,ret_)
                                          line.sendMessage(to,str(settings["Respontag"]))
                                          #sendMessageWithMention(to, contact.mid)
                                          break										  
                if msg.text in ["Me","me",".me",".Me","‡∏Ñ‡∏ó","/me"]:
                    line.sendText(msg.to,"üòÜ‡πÑ‡∏°‡πà‡∏°‡∏µüòÜ")
                if msg.text in ["‡∏õ‡πä‡∏≤","‡∏û‡∏µ‡πà‡∏¢‡∏π","‡∏•‡∏∏‡∏á","‡∏ó‡πà‡∏≤‡∏ô‡∏¢‡∏π","‡∏ô‡∏≤‡∏¢","‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô","‡∏à‡∏≤‡∏£‡πå‡∏¢","‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡πå‡∏¢","‡πÄ‡∏Æ‡∏µ‡∏¢"]:
                    line.sendText(msg.to,"üòÜ‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà..‡πÑ‡∏õ‡∏ó‡∏≥‡∏ò‡∏∏‡∏£‡∏∞üòÜ")
                if msg.text in ["‡∏ö‡∏≠‡∏ó","‡πÄ‡∏ã‡∏•","‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó","selfbot","‡∏Ñ‡∏ô‡∏£‡∏∂‡∏ö‡∏≠‡∏ó","Help","help",".help","/help","‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á"]:
                    line.sendText(msg.to,"üíñ‡∏™‡∏ô‡πÉ‡∏àüëâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó\nüëâ‡πÅ‡∏Å‡πâ‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó\nüëâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏≥‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó üòé\n‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå‡πÑ‡∏≠‡∏î‡∏µüôãyou-kdüôã\n‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ó‡∏£‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâüëâ 0902193615 \n‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ..‡∏ä‡∏¥‡∏ß‡πÜ‡πÑ‡∏°‡πà‡πÅ‡∏û‡∏á‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ôüëå")
                if msg.text in ["sp","Speed",".speed","/speed","Sp",".Speed"]:
                    line.sendText(msg.to,"‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πàüëâ 0.9526894063737SecondsüòÅ")
                if msg.text in ["runtime","Runtime","/uptime","‡∏≠‡∏≠‡∏ô",".uptime"]:
                    line.sendText(msg.to,"üê£‡∏™‡∏∞‡∏™‡∏°‡πÄ‡∏ß‡∏•‡∏≠‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏´‡∏£‡∏≠‡∏Ñ‡∏±‡∏öüê∂")
                if msg.text in ["55","555","5555","55555","55+","555+","5555+","‡∏Ç‡∏≥",".‡∏Ç‡∏≥"]:
                    line.sendText(msg.to,"‡∏Æ‡πà‡∏≤‡πÜ‡πÜ‡πÜ..‡∏Ç‡∏≥‡πÑ‡∏£..‡∏Ç‡∏≥‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ô‡∏î‡∏¥")
                if msg.text in ["‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®","‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤","‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô"]:
                	line.sendText(msg.to,"‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏ü‡∏•‡πå+‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå+‡πÅ‡∏Å‡πâ‡∏†‡∏≤‡∏©‡∏≤\n??‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏π‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ôüíù\nüëâ‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πà‡∏≤‡∏ö‡∏≠‡∏ó\n‡∏£‡∏≤‡∏Ñ‡∏≤300‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ôüíñ\n#‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏ß‡∏•‡∏∞100üëå\nüéÄ‡∏™‡∏ô‡πÉ‡∏à‡∏£‡∏µ‡∏ö‡∏ó‡∏±‡∏Å..‡∏ö‡∏≠‡∏ópython3‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏•‡πâ‡∏ô‡∏´‡∏•‡∏≤‡∏°üéÅ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á\n(‡∏ú‡∏°‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏Ñ‡πà15‡∏ô‡∏≤‡∏ó‡∏µ‡∏ô‡∏∞‡∏à‡πä‡∏∞)\nselfbot by:\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì\n‚ï†‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£ \n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ")
                if msg.text in dangerMessage:
                    random.choice(Rfu).kickoutFromGroup(receiver,[sender])
                    random.choice(Rfu).sendText(msg.to,"‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
                if msg.text in fukgerMessage:
                    random.choice(Rfu).kickoutFromGroup(receiver,[sender])
                    random.choice(Rfu).sendText(msg.to,"‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏´‡∏¢‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡∏™‡∏∏‡∏Ç‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
        if op.type == 17:
           print ("MEMBER JOIN TO GROUP")
           if settings["Wc"] == True:
             if op.param2 in lineMID:
                 return
             dan = line.getContact(op.param2)
             tgb = line.getGroup(op.param1)
             line.sendMessage(op.param1, str(settings["welcome"]) +"\n‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {}, Welcome to Group {}\n‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡∏ï‡∏±‡∏ß‡∏î‡∏µ‡πÜ‡∏•‡∏∞\n‡∏≠‡πà‡∏¢‡πà‡∏≤‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡πâ‡∏≤‡∏•‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÜ‡∏≠‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏∞ (ÔΩÄ„Éªœâ„Éª¬¥)".format(str(dan.displayName),str(tgb.name)))
             line.sendContact(op.param1, op.param2)
             line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
             line.sendMessage(op.param1, str(settings["comment"]))
        if op.type == 19:
           print ("MEMBER KICKOUT TO GROUP")
           if settings["Nk"] == True:
             if op.param2 in lineMID:
                 return
             dan = line.getContact(op.param2)
             tgb = line.getGroup(op.param1)
             line.sendMessage(op.param1,str(settings["kick"]) + "\n‡πÄ‡∏Æ‡πâ‡∏¢ {}, ‡∏Ñ‡∏∑‡∏≠‡∏´‡∏¢‡∏±‡∏á‡∏°‡∏±‡∏ô‡πÇ‡∏´‡∏î‡πÅ‡∏ó‡πâ‡∏ß‡∏∞Œ£(„Å£Ôæü–îÔæüÔºõ)„Å£ ".format(str(dan.displayName)))
             line.sendContact(op.param1, op.param2)
             line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
        if op.type == 15:
           print ("MEMBER LEAVE TO GROUP")
           if settings["Lv"] == True:
             if op.param2 in lineMID:
                 return
             dan = line.getContact(op.param2)
             tgb = line.getGroup(op.param1)
             line.sendMessage(op.param1,str(settings["bye"]) + "\n {}, ‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏° {} \n‡∏¢‡∏∑‡∏ô‡πÑ‡∏ß‡πâ‡∏≠‡∏≤‡∏•‡∏±‡∏¢‡πÅ‡∏î‡πà‡πÄ‡∏Ç‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤3‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ  (ÔΩÄ„Éªœâ„Éª¬¥)".format(str(dan.displayName),str(tgb.name)))
             line.sendContact(op.param1, op.param2)
             line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
        if op.type == 55:
            try:
                if RfuCctv['cyduk'][op.param1]==True:
                    if op.param1 in RfuCctv['point']:
                        Name = line.getContact(op.param2).displayName
                        if Name in RfuCctv['sidermem'][op.param1]:
                            pass
                        else:
                            RfuCctv['sidermem'][op.param1] += "\nüî∞" + Name
                            pref=['‡∏à‡πä‡∏∞‡πÄ‡∏≠‡πã','‡∏£‡∏π‡πâ‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÅ‡∏≠‡∏ö‡∏≠‡∏¢‡∏π‡πà','‡πÄ‡∏•‡πà‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏≠‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏´‡∏£‡∏≠','‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏¥‡∏ô‡∏à‡∏≤‡∏£‡∏∂‡πÑ‡∏á','‡∏ß‡πà‡∏≤‡πÑ‡∏á','‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏•‡∏¢‡∏ô‡∏∞','‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏Ñ‡∏∏‡∏¢‡∏´‡∏ô‡πà‡∏≠‡∏¢','‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ô‡∏µ‡πâ']
                            sendMessageWithMention(op.param1, op.param2)
                            line.sendMessage(op.param1, str(random.choice(pref)) + '\n‚ô™ ‚ô¨ „Éæ(¬¥Ô∏∂`‚ô°)Ôæâ ‚ô¨ ‚ô™')
                            line.sendContact(op.param1, op.param2)
                    else:
                        pass
                else:
                    pass
            except:
                pass

        if op.type == 55:
            try:
                if RfuCctv['cyduk'][op.param1]==True:
                    if op.param1 in RfuCctv['point']:
                        Name = line.getContact(op.param2).displayName
                        if Name in RfuCctv['sidermem'][op.param1]:
                            pass
                        else:
                            RfuCctv['sidermem'][op.param1] += "\n‚å¨ " + Name + "\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ"
                            if " " in Name:
                            	nick = Name.split(' ')
                            if len(nick) == 2:
                            	line.sendMessage(op.param1, "Nah " +nick[0])
                            summon(op.param1, [op.param2])
                    else:
                        pass
                else:
                    pass
            except:
                pass
        if op.type == 55:
            print (" [‚Ñ¢‚ùç‚úØÕúÕ°YOU-BOT‚úØÕúÕ°‚ùÇ‚û£]  ")
            try:
                if op.param1 in read['readPoint']:
                    if op.param2 in read['readMember'][op.param1]:
                        pass
                    else:
                        read['readMember'][op.param1] += op.param2
                    read['ROM'][op.param1][op.param2] = op.param2
                    backupData()
                else:
                   pass
            except:
                pass
    except Exception as error:
        logError(error)
#==============================================================================#
def a2():
    now2 = datetime.now()
    nowT = datetime.strftime(now2,"%M")
    if nowT[14:] in ["10","20","30","40","50","00"]:
        return False
    else:
        return True
        

while True:
    try:
        ops = oepoll.singleTrace(count=5)
        if ops is not None:
            for op in ops:
                lineBot(op)
                oepoll.setRevision(op.revision)
    except Exception as e:
        logError(e)
